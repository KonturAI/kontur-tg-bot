#!/bin/bash



# ============================================
# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞—Ç–∞
# ============================================

execute_rollback() {
    local release_id=$1
    local service_name=$2
    local target_tag=$3
    local system_repo=$4

    log_info "–û—Ç–∫–∞—Ç" "–ù–∞—á–∞–ª–æ –æ—Ç–∫–∞—Ç–∞ $service_name –∫ –≤–µ—Ä—Å–∏–∏ $target_tag"
    log_info "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ" "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SSH –∫ root@$STAGE_HOST:22"

    SSH_OUTPUT=$(sshpass -p "$STAGE_PASSWORD" ssh -o StrictHostKeyChecking=no root@$STAGE_HOST -p 22 << EOFMAIN
set -e

# ============================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∫–∞—Ç–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
# ============================================

ROLLBACK_LOG_DIR="/var/log/deployments/rollback/$service_name"
ROLLBACK_LOG_FILE="\$ROLLBACK_LOG_DIR/${target_tag}-rollback.log"

init_rollback_logging() {
    mkdir -p "\$ROLLBACK_LOG_DIR"
    echo "========================================" >> "\$ROLLBACK_LOG_FILE"
    echo "–û—Ç–∫–∞—Ç –Ω–∞—á–∞—Ç: \$(date '+%Y-%m-%d %H:%M:%S')" >> "\$ROLLBACK_LOG_FILE"
    echo "–°–µ—Ä–≤–∏—Å: $service_name" >> "\$ROLLBACK_LOG_FILE"
    echo "–¶–µ–ª–µ–≤–æ–π —Ç–µ–≥: $target_tag" >> "\$ROLLBACK_LOG_FILE"
    echo "ID —Ä–µ–ª–∏–∑–∞: $release_id" >> "\$ROLLBACK_LOG_FILE"
    echo "========================================" >> "\$ROLLBACK_LOG_FILE"
}

log_message() {
    local level=\$1
    local message=\$2
    local timestamp=\$(date '+%Y-%m-%d %H:%M:%S')
    local prefix=""

    case \$level in
        "INFO") prefix="‚ÑπÔ∏è" ;;
        "SUCCESS") prefix="‚úÖ" ;;
        "ERROR") prefix="‚ùå" ;;
        "WARNING") prefix="‚ö†Ô∏è" ;;
    esac

    echo "[\$timestamp] [\$level] \$prefix \$message" | tee -a "\$ROLLBACK_LOG_FILE"
}

# ============================================
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–ª–∏–∑–∞ (—á–µ—Ä–µ–∑ —É–¥–∞–ª–µ–Ω–Ω—ã–π API)
# ============================================

update_rollback_status_remote() {
    local status=\$1
    local release_tg_bot_url="${STAGE_DOMAIN}${LOOM_RELEASE_TG_BOT_PREFIX}"

    curl -s -X PATCH \
        -H "Content-Type: application/json" \
        -d "{
            \"release_id\": $release_id,
            \"status\": \"\$status\"
        }" \
        "\${release_tg_bot_url}/release" > /dev/null

    log_message "INFO" "–°—Ç–∞—Ç—É—Å —Ä–µ–ª–∏–∑–∞ –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞: \$status"
}

# ============================================
# –û–ø–µ—Ä–∞—Ü–∏–∏ Git –¥–ª—è –æ—Ç–∫–∞—Ç–∞
# ============================================

save_current_state() {
    cd loom/$service_name

    local current_ref=\$(git symbolic-ref --short HEAD 2>/dev/null || git describe --tags --exact-match 2>/dev/null || git rev-parse --short HEAD)
    log_message "INFO" "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ—Ç–∫–∞—Ç–∞: \$current_ref"
    echo "\$current_ref" > /tmp/rollback_previous_ref.txt
}

fetch_target_tag() {
    log_message "INFO" "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ —Ç–µ–≥–∞ $target_tag –¥–ª—è –æ—Ç–∫–∞—Ç–∞"

    # –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ–≥–∞, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if git tag -l | grep -q "^${target_tag}\$"; then
        log_message "INFO" "–£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ–≥–∞ $target_tag"
        git tag -d $target_tag >> "\$ROLLBACK_LOG_FILE" 2>&1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    log_message "INFO" "–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    git fetch origin >> "\$ROLLBACK_LOG_FILE" 2>&1
    git fetch origin --tags --force >> "\$ROLLBACK_LOG_FILE" 2>&1

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–µ–≥–∞
    if ! git tag -l | grep -q "^${target_tag}\$"; then
        log_message "ERROR" "–¢–µ–≥ $target_tag –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
        log_message "INFO" "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):"
        git tag -l | tail -10 | tee -a "\$ROLLBACK_LOG_FILE"
        exit 1
    fi

    log_message "SUCCESS" "–¢–µ–≥ $target_tag –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–∫–∞—Ç–∞"
}

checkout_rollback_tag() {
    log_message "INFO" "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–µ–≥ $target_tag –¥–ª—è –æ—Ç–∫–∞—Ç–∞"

    git checkout $target_tag >> "\$ROLLBACK_LOG_FILE" 2>&1

    if [ \$? -ne 0 ]; then
        log_message "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ç–µ–≥ $target_tag"
        exit 1
    fi

    log_message "SUCCESS" "–£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ —Ç–µ–≥ $target_tag"

    # –û—á–∏—Å—Ç–∫–∞ –≤–µ—Ç–æ–∫
    log_message "INFO" "–û—á–∏—Å—Ç–∫–∞ –≤–µ—Ç–æ–∫"
    git for-each-ref --format='%(refname:short)' refs/heads | \
        grep -v -E "^(main|master)\$" | \
        xargs -r git branch -D >> "\$ROLLBACK_LOG_FILE" 2>&1
    git remote prune origin >> "\$ROLLBACK_LOG_FILE" 2>&1

    log_message "SUCCESS" "–û—á–∏—Å—Ç–∫–∞ –≤–µ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# ============================================
# –û—Ç–∫–∞—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# ============================================

rollback_migrations() {
    log_message "INFO" "–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫ –≤–µ—Ä—Å–∏–∏ $target_tag"

    docker run --rm \
        --network net \
        -v ./:/app \
        -w /app \
        -e PREVIOUS_TAG=$target_tag \
        --env-file ../$system_repo/env/.env.app \
        --env-file ../$system_repo/env/.env.db \
        --env-file ../$system_repo/env/.env.monitoring \
        python:3.11-slim \
        bash -c '
            echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            cd .github && pip install -r requirements.txt > /dev/null 2>&1 && cd ..
            echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            echo "üöÄ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π..."
            python internal/migration/run.py stage --command down --version '\$PREVIOUS_TAG'
        ' >> "\$ROLLBACK_LOG_FILE" 2>&1

    local migration_exit_code=\$?

    if [ \$migration_exit_code -ne 0 ]; then
        log_message "ERROR" "–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏ \$migration_exit_code"
        tail -50 "\$ROLLBACK_LOG_FILE"
        exit 1
    fi

    log_message "SUCCESS" "–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à—ë–Ω"
}

# ============================================
# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –æ—Ç–∫–∞—Ç–∞
# ============================================

rebuild_container_for_rollback() {
    log_message "INFO" "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –≤–µ—Ä—Å–∏–µ–π –æ—Ç–∫–∞—Ç–∞ $target_tag"

    cd ../$system_repo

    export \$(cat env/.env.app env/.env.db env/.env.monitoring | xargs)

    docker compose -f ./docker-compose/app.yaml up -d --build $service_name >> "\$ROLLBACK_LOG_FILE" 2>&1

    if [ \$? -ne 0 ]; then
        log_message "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–æ –≤—Ä–µ–º—è –æ—Ç–∫–∞—Ç–∞"
        tail -50 "\$ROLLBACK_LOG_FILE"
        exit 1
    fi

    log_message "SUCCESS" "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω —Å –≤–µ—Ä—Å–∏–µ–π –æ—Ç–∫–∞—Ç–∞"
    log_message "INFO" "Docker –æ–±—Ä–∞–∑—ã –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞:"
    docker images | grep $service_name | tee -a "\$ROLLBACK_LOG_FILE"
}

# ============================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞
# ============================================

check_health_after_rollback() {
    local url="${STAGE_DOMAIN}${SERVICE_PREFIX}/health"
    local http_code=\$(curl -f -s -o /dev/null -w "%{http_code}" "\$url" 2>/dev/null)

    if [ "\$http_code" = "200" ]; then
        return 0
    else
        return 1
    fi
}

wait_for_health_after_rollback() {
    log_message "INFO" "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞"

    sleep 15

    local max_attempts=5
    local attempt=1

    while [ \$attempt -le \$max_attempts ]; do
        log_message "INFO" "–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ \$attempt/\$max_attempts –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞"

        if check_health_after_rollback; then
            log_message "SUCCESS" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞"
            return 0
        else
            log_message "WARNING" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞, –æ–∂–∏–¥–∞–Ω–∏–µ 20 —Å–µ–∫—É–Ω–¥..."
            sleep 20
        fi

        ((attempt++))
    done

    log_message "ERROR" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ \$max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    log_message "INFO" "–õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫):"
    docker logs --tail 100 $service_name | tee -a "\$ROLLBACK_LOG_FILE"

    update_rollback_status_remote "stage_rollback_test_failed"
    exit 1
}

# ============================================
# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ (–ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞)
# ============================================

restore_to_current() {
    log_message "INFO" "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞ –æ—Ç–∫–∞—Ç–∞"

    cd loom/$service_name

    local previous_ref=\$(cat /tmp/rollback_previous_ref.txt)
    log_message "INFO" "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫: \$previous_ref"

    git checkout "\$previous_ref" >> "\$ROLLBACK_LOG_FILE" 2>&1

    if [ \$? -ne 0 ]; then
        log_message "WARNING" "–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: \$previous_ref"
    else
        log_message "SUCCESS" "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: \$previous_ref"
    fi

    # –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
    log_message "INFO" "–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏"

    docker run --rm \
        --network net \
        -v ./:/app \
        -w /app \
        --env-file ../$system_repo/env/.env.app \
        --env-file ../$system_repo/env/.env.db \
        --env-file ../$system_repo/env/.env.monitoring \
        python:3.11-slim \
        bash -c '
            echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            cd .github && pip install -r requirements.txt > /dev/null 2>&1 && cd ..
            echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            echo "üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
            python internal/migration/run.py stage
        ' >> "\$ROLLBACK_LOG_FILE" 2>&1

    log_message "SUCCESS" "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

    rm -f /tmp/rollback_previous_ref.txt
}

# ============================================
# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–∫–∞—Ç–∞
# ============================================

main() {
    init_rollback_logging
    log_message "INFO" "üîÑ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞ –æ—Ç–∫–∞—Ç–∞ –¥–ª—è $service_name –∫ –≤–µ—Ä—Å–∏–∏ $target_tag"

    update_rollback_status_remote "stage_rollback"

    save_current_state
    fetch_target_tag
    checkout_rollback_tag
    rollback_migrations
    rebuild_container_for_rollback
    wait_for_health_after_rollback

    update_rollback_status_remote "manual_testing"

    log_message "SUCCESS" "üéâ –¢–µ—Å—Ç –æ—Ç–∫–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!"
    log_message "INFO" "–°–µ—Ä–≤–∏—Å: $service_name"
    log_message "INFO" "–í–µ—Ä—Å–∏—è –æ—Ç–∫–∞—Ç–∞: $target_tag"
    log_message "INFO" "–°—Ç–∞—Ç—É—Å: –û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    log_message "INFO" "–§–∞–π–ª –ª–æ–≥–æ–≤: \$ROLLBACK_LOG_FILE"

    restore_to_current

    log_message "SUCCESS" "–¶–∏–∫–ª —Ç–µ—Å—Ç–∞ –æ—Ç–∫–∞—Ç–∞ –∑–∞–≤–µ—Ä—à—ë–Ω"

    echo ""
    echo "========================================="
    echo "üìã –ò—Ç–æ–≥–∏ –æ—Ç–∫–∞—Ç–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫):"
    echo "========================================="
    tail -30 "\$ROLLBACK_LOG_FILE"
}

main
EOFMAIN
)

    local ssh_exit_code=$?

    if [ $ssh_exit_code -ne 0 ]; then
        log_error "–û—Ç–∫–∞—Ç" "SSH –æ—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏ $ssh_exit_code"
        echo "$SSH_OUTPUT"
        exit 1
    fi

    log_success "–û—Ç–∫–∞—Ç" "–¢–µ—Å—Ç –æ—Ç–∫–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω –¥–ª—è $service_name"
}

# ============================================
# –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –æ–±—ë—Ä—Ç–∫–∞ –æ—Ç–∫–∞—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç release_api)
# ============================================

rollback_with_status_tracking() {
    local release_id=$1
    local service_name=$2
    local target_tag=$3
    local system_repo=$4

    log_info "–û—Ç–∫–∞—Ç" "–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç–∫–∞—Ç–∞ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º —Å—Ç–∞—Ç—É—Å–∞"

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –æ—Ç–∫–∞—Ç–∞
    export RELEASE_ID=$release_id
    update_release_status "stage_rollback"

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞—Ç–∞
    execute_rollback "$release_id" "$service_name" "$target_tag" "$system_repo"

    if [ $? -eq 0 ]; then
        update_release_status "manual_testing"
        verify_rollback_success "$service_name" "$target_tag"
    else
        update_release_status "stage_rollback_test_failed"
        handle_rollback_failure "$service_name" "$target_tag"
        exit 1
    fi
}

# ============================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–∞—Ç–∞
# ============================================

verify_rollback_success() {
    local service_name=$1
    local target_tag=$2

    log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–∞—Ç–∞" "–¢–µ—Å—Ç –æ—Ç–∫–∞—Ç–∞ –¥–ª—è $service_name –∑–∞–≤–µ—Ä—à—ë–Ω"
    log_info "–°–µ—Ä–≤–∏—Å" "$service_name"
    log_info "–í–µ—Ä—Å–∏—è –æ—Ç–∫–∞—Ç–∞" "$target_tag"
    log_info "–°—Ç–∞—Ç—É—Å" "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    log_info "–§–∞–π–ª –ª–æ–≥–æ–≤" "/var/log/deployments/rollback/$service_name/${target_tag}-rollback.log"
}

handle_rollback_failure() {
    local service_name=$1
    local target_tag=$2

    log_error "–û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞" "–¢–µ—Å—Ç –æ—Ç–∫–∞—Ç–∞ –¥–ª—è $service_name –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
    log_info "–°–µ—Ä–≤–∏—Å" "$service_name"
    log_info "–¶–µ–ª–µ–≤–∞—è –≤–µ—Ä—Å–∏—è" "$target_tag"
    log_warning "–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ"
    log_info "–§–∞–π–ª –ª–æ–≥–æ–≤" "/var/log/deployments/rollback/$service_name/${target_tag}-rollback.log"
}