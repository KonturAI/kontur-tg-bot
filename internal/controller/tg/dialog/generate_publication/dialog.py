from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Row, Back, Select, Checkbox, Next
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.media import DynamicMedia

from internal import interface, model


class GeneratePublicationDialog(interface.IGeneratePublicationDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            generate_publication_service: interface.IGeneratePublicationService,
            generate_publication_getter: interface.IGeneratePublicationGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.generate_publication_service = generate_publication_service
        self.generate_publication_getter = generate_publication_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_select_category_window(),
            self.get_input_text_window(),
            self.get_generation_window(),
            self.get_preview_window(),
            self.get_edit_text_menu_window(),
            self.get_regenerate_text_window(),
            self.get_edit_title_window(),
            self.get_edit_tags_window(),
            self.get_edit_content_window(),
            self.get_image_menu_window(),
            self.get_generate_image_window(),
            self.get_upload_image_window(),
            self.get_social_network_select_window()
        )

    def get_select_category_window(self) -> Window:
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Const("üè∑ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä—É–±—Ä–∏–∫—É</b>\n\n"),
                Case(
                    {
                        True: Const("üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä—É–±—Ä–∏–∫–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:"),
                        False: Multi(
                            Const("‚ö†Ô∏è <b>–í –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä—É–±—Ä–∏–∫</b>\n\n"),
                            Const("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä—É–±—Ä–∏–∫"),
                        ),
                    },
                    selector="has_categories"
                ),
                sep="",
            ),

            Column(
                Select(
                    Format("üìå {item[name]}"),
                    id="category_select",
                    items="categories",
                    item_id_getter=lambda item: str(item["id"]),
                    on_click=self.generate_publication_service.handle_select_category,
                    when="has_categories",
                ),
            ),

            Button(
                Const("‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                id="cancel_to_content_menu",
                on_click=self.generate_publication_service.handle_go_to_content_menu,
            ),

            state=model.GeneratePublicationStates.select_category,
            getter=self.generate_publication_getter.get_categories_data,
            parse_mode="HTML",
        )

    def get_input_text_window(self) -> Window:
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Const("‚úçÔ∏è <b>–û–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n\n"),
                # Text input error messages
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º\n\n"),
                        False: Const(""),
                    },
                    selector="has_void_input_text"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                        False: Const(""),
                    },
                    selector="has_small_input_text"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 2000 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                        False: Const(""),
                    },
                    selector="has_big_input_text"
                ),
                # Voice input error messages
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª\n\n"),
                        False: Const(""),
                    },
                    selector="has_invalid_voice_type"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç)\n\n"),
                        False: Const(""),
                    },
                    selector="has_long_voice_duration"
                ),
                Case(
                    {
                        True: Const(
                            "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç\n\n"),
                        False: Const(""),
                    },
                    selector="has_voice_recognition_error"
                ),
                Case(
                    {
                        True: Const(
                            "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –í –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç—á–µ\n\n"),
                        False: Const(""),
                    },
                    selector="has_empty_voice_text"
                ),
                Const("üí° <b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b>\n"),
                Const("<i>‚Ä¢ –ú–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –æ —á–µ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å—Ç\n"),
                Const("‚Ä¢ –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"),
                Const("‚Ä¢ –ò–ò —Å–æ–∑–¥–∞—Å—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è</i>\n\n"),
                Case(
                    {
                        True: Format("üìå <b>–í–∞—à —Ç–µ–∫—Å—Ç:</b>\n<i>{input_text}</i>"),
                        False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è..."),
                    },
                    selector="has_input_text"
                ),
                sep="",
            ),

            TextInput(
                id="text_input",
                on_success=self.generate_publication_service.handle_text_input,
            ),

            MessageInput(
                func=self.generate_publication_service.handle_voice_input,
                content_types=["voice", "audio"],
            ),

            Row(
                Next(
                    Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
                    when="has_input_text"
                ),
                Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            ),

            state=model.GeneratePublicationStates.input_text,
            getter=self.generate_publication_getter.get_input_text_data,
            parse_mode="HTML",
        )

    def get_generation_window(self) -> Window:
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n\n"),
                Format("üìå <b>–í–∞—à —Ç–µ–∫—Å—Ç:</b>\n<i>{input_text}</i>\n\n"),
                Const("üéØ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üìÑ –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç"),
                    id="text_only",
                    on_click=self.generate_publication_service.handle_generate_text,
                ),
                Button(
                    Const("üñº –¢–µ–∫—Å—Ç + –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="with_image",
                    on_click=self.generate_publication_service.handle_generate_text_with_image,
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.GeneratePublicationStates.generation,
            getter=self.generate_publication_getter.get_input_text_data,
            parse_mode="HTML",
        )

    def get_preview_window(self) -> Window:
        return Window(
            Multi(
                Const("üìù <b>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n"),
                Const("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"),
                Format("<b>{publication_name}</b>\n\n"),
                Format("{publication_text}\n\n"),
                Case(
                    {
                        True: Format("üè∑ –¢–µ–≥–∏: {publication_tags}"),
                        False: Const(""),
                    },
                    selector="has_tags"
                ),
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
                Case(
                    {
                        True: Format("\nüñº –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {current_image_index} –∏–∑ {total_images}"),
                        False: Const(""),
                    },
                    selector="has_multiple_images"
                ),
                Const("\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"),
                sep="",
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
            Row(
                Button(
                    Const("‚¨ÖÔ∏è"),
                    id="prev_image",
                    on_click=self.generate_publication_service.handle_prev_image,
                    when="has_multiple_images",
                ),
                Button(
                    Const("‚û°Ô∏è"),
                    id="next_image",
                    on_click=self.generate_publication_service.handle_next_image,
                    when="has_multiple_images",
                ),
                when="has_multiple_images",
            ),

            Column(
                Row(
                    Button(
                        Const("‚úèÔ∏è –¢–µ–∫—Å—Ç"),
                        id="edit_text_menu",
                        on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_text_menu),
                    ),
                    Button(
                        Const("üñº –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                        id="edit_image_menu",
                        on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.image_menu),
                    ),
                ),
                Button(
                    Const("üíæ –í —á–µ—Ä–Ω–æ–≤–∏–∫–∏"),
                    id="save_draft",
                    on_click=self.generate_publication_service.handle_add_to_drafts,
                ),
                Button(
                    Const("üì§ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"),
                    id="send_moderation",
                    on_click=self.generate_publication_service.handle_send_to_moderation,
                    when="requires_moderation",
                ),
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
                    id="publish_now",
                    on_click=self.generate_publication_service.handle_publish_now,
                    when="can_publish_directly",
                ),
            ),

            Button(
                Const("‚ùå –û—Ç–º–µ–Ω–∞"),
                id="cancel",
                on_click=self.generate_publication_service.handle_go_to_content_menu,
            ),

            state=model.GeneratePublicationStates.preview,
            getter=self.generate_publication_getter.get_preview_data,
            parse_mode="HTML",
        )

    def get_edit_text_menu_window(self) -> Window:
        return Window(
            Multi(
                Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</b>\n\n"),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë"),
                    id="regenerate_all",
                    on_click=self.generate_publication_service.handle_regenerate_text,
                ),
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–º–ø—Ç–æ–º"),
                    id="regenerate_with_prompt",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.regenerate_text),
                ),
                Button(
                    Const("üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ"),
                    id="edit_title",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_title),
                ),
                Button(
                    Const("üè∑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–≥–∏"),
                    id="edit_tags",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_tags),
                ),
                Button(
                    Const("üìÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"),
                    id="edit_content",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_content),
                ),
            ),
            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–≤—å—é"),
                id="preview",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.preview),
            ),

            state=model.GeneratePublicationStates.edit_text_menu,
            parse_mode="HTML",
        )

    def get_regenerate_text_window(self) -> Window:
        return Window(
            Multi(
                Const("üîÑ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É–∫–∞–∑–∞–Ω–∏—è–º–∏</b>\n\n"),
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –µ—Å–ª–∏ —Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º
                Case(
                    {
                        True: Multi(
                            Format("üìå <b>–í–∞—à–∏ —É–∫–∞–∑–∞–Ω–∏—è:</b>\n<i>{regenerate_prompt}</i>\n\n"),
                            Const("‚è≥ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç...</b>\n"),
                            Const("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ."),
                        ),
                        False: Multi(
                            # Error messages —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º
                            Case(
                                {
                                    True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –£–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è\n\n"),
                                    False: Const(""),
                                },
                                selector="has_void_regenerate_prompt"
                            ),
                            Case(
                                {
                                    True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –£–∫–∞–∑–∞–Ω–∏—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ (–º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                                    False: Const(""),
                                },
                                selector="has_small_regenerate_prompt"
                            ),
                            Case(
                                {
                                    True: Const(
                                        "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –£–∫–∞–∑–∞–Ω–∏—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                                    False: Const(""),
                                },
                                selector="has_big_regenerate_prompt"
                            ),
                            Const("üí° <b>–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>\n"),
                            Const(
                                "<i>–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ, –¥–æ–±–∞–≤—å –±–æ–ª—å—à–µ —ç–º–æ—Ü–∏–π, —É–±–µ—Ä–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –∏ —Ç.–¥.</i>\n\n"),
                            Case(
                                {
                                    True: Format("üìå <b>–í–∞—à–∏ —É–∫–∞–∑–∞–Ω–∏—è:</b>\n<i>{regenerate_prompt}</i>"),
                                    False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞..."),
                                },
                                selector="has_regenerate_prompt"
                            ),
                        ),
                    },
                    selector="is_regenerating_text"
                ),
                sep="",
            ),

            TextInput(
                id="regenerate_prompt_input",
                on_success=self.generate_publication_service.handle_regenerate_text_with_prompt,
            ),

            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="edit_text_menu",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_text_menu),
                when="~is_regenerating_text",  # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            ),

            state=model.GeneratePublicationStates.regenerate_text,
            getter=self.generate_publication_getter.get_regenerate_data,
            parse_mode="HTML",
        )

    def get_edit_title_window(self) -> Window:
        return Window(
            Multi(
                Const("üìù <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è</b>\n\n"),
                Format("–¢–µ–∫—É—â–µ–µ: <b>{publication_name}</b>\n\n"),
                # Add error messages
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º\n\n"),
                        False: Const(""),
                    },
                    selector="has_void_title"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                        False: Const(""),
                    },
                    selector="has_big_title"
                ),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:</b>"),
                sep="",
            ),

            TextInput(
                id="title_input",
                on_success=self.generate_publication_service.handle_edit_title_save,
            ),

            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="edit_text_menu",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_text_menu),
            ),

            state=model.GeneratePublicationStates.edit_title,
            getter=self.generate_publication_getter.get_edit_title_data,
            parse_mode="HTML",
        )

    def get_edit_tags_window(self) -> Window:
        """–û–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–≥–æ–≤"""
        return Window(
            Multi(
                Const("üè∑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–≥–æ–≤</b>\n\n"),
                Format("–¢–µ–∫—É—â–∏–µ —Ç–µ–≥–∏: <b>{publication_tags}</b>\n\n"),
                # Add error messages
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ç–µ–≥–æ–≤ (–º–∞–∫—Å–∏–º—É–º 10)\n\n"),
                        False: Const(""),
                    },
                    selector="has_too_many_tags"
                ),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:</b>\n"),
                Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ø—Ä–æ–¥–∞–∂–∏, SMM</i>"),
                sep="",
            ),

            TextInput(
                id="tags_input",
                on_success=self.generate_publication_service.handle_edit_tags_save,
            ),

            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="edit_text_menu",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_text_menu),
            ),

            state=model.GeneratePublicationStates.edit_tags,
            getter=self.generate_publication_getter.get_edit_tags_data,
            parse_mode="HTML",
        )

    def get_edit_content_window(self) -> Window:
        return Window(
            Multi(
                Const("üìÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                # Add error messages
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º\n\n"),
                        False: Const(""),
                    },
                    selector="has_void_content"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                        False: Const(""),
                    },
                    selector="has_small_content"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                        False: Const(""),
                    },
                    selector="has_big_content"
                ),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç:</b>\n"),
                Const("<i>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ–∫–Ω–µ</i>"),
                sep="",
            ),

            TextInput(
                id="content_input",
                on_success=self.generate_publication_service.handle_edit_content_save,
            ),

            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="edit_text_menu",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.edit_text_menu),
            ),

            state=model.GeneratePublicationStates.edit_content,
            getter=self.generate_publication_getter.get_edit_content_data,
            parse_mode="HTML",
        )

    def get_image_menu_window(self) -> Window:
        return Window(
            Multi(
                Const("üñº <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</b>\n\n"),
                Case(
                    {
                        True: Const("‚úÖ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ</b>\n\n"),
                        False: Const("‚ùå <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b>\n\n"),
                    },
                    selector="has_image"
                ),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ"),
                    id="generate_image",
                    on_click=self.generate_publication_service.handle_generate_new_image,
                ),
                Button(
                    Const("üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–º–ø—Ç–æ–º"),
                    id="generate_image_prompt",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.generate_image),
                ),
                Button(
                    Const("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—ë"),
                    id="upload_image",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.upload_image),
                ),
                Button(
                    Const("üóë –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="remove_image",
                    on_click=self.generate_publication_service.handle_remove_image,
                    when="has_image",
                ),
            ),

            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="preview",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.preview),
            ),

            state=model.GeneratePublicationStates.image_menu,
            getter=self.generate_publication_getter.get_image_menu_data,
            parse_mode="HTML",
        )

    def get_generate_image_window(self) -> Window:
        return Window(
            Multi(
                Const("üé® <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –µ—Å–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º
                Case(
                    {
                        True: Multi(
                            Format("üìå <b>–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>\n<i>{image_prompt}</i>\n\n"),
                            Const("‚è≥ <b>–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...</b>\n"),
                            Const("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ."),
                        ),
                        False: Multi(
                            # Error messages —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º
                            Case(
                                {
                                    True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º\n\n"),
                                    False: Const(""),
                                },
                                selector="has_void_image_prompt"
                            ),
                            Case(
                                {
                                    True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ (–º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                                    False: Const(""),
                                },
                                selector="has_small_image_prompt"
                            ),
                            Case(
                                {
                                    True: Const(
                                        "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"),
                                    False: Const(""),
                                },
                                selector="has_big_image_prompt"
                            ),
                            Const("üí° <b>–û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</b>\n"),
                            Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏–Ω–∏—Ö —Ç–æ–Ω–∞—Ö, –¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å</i>\n\n"),
                            Case(
                                {
                                    True: Format("üìå <b>–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>\n<i>{image_prompt}</i>"),
                                    False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞..."),
                                },
                                selector="has_image_prompt"
                            ),
                        ),
                    },
                    selector="is_generating_image"
                ),
                sep="",
            ),

            TextInput(
                id="image_prompt_input",
                on_success=self.generate_publication_service.handle_generate_image_with_prompt,
            ),

            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="image_menu",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.image_menu),
                when="~is_generating_image",  # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            ),

            state=model.GeneratePublicationStates.generate_image,
            getter=self.generate_publication_getter.get_image_prompt_data,
            parse_mode="HTML",
        )

    def get_upload_image_window(self) -> Window:
        return Window(
            Multi(
                Const("üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                # Add error messages
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–Ω–µ –¥—Ä—É–≥–æ–π —Ç–∏–ø —Ñ–∞–π–ª–∞)\n\n"),
                        False: Const(""),
                    },
                    selector="has_invalid_image_type"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 10 –ú–ë)\n\n"),
                        False: Const(""),
                    },
                    selector="has_big_image_size"
                ),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ\n\n"),
                        False: Const(""),
                    },
                    selector="has_image_processing_error"
                ),
                Const("üì∏ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</b>\n"),
                Const("<i>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF</i>\n"),
                Const("<i>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10 –ú–ë</i>"),
                sep="",
            ),

            MessageInput(
                func=self.generate_publication_service.handle_image_upload,
            ),

            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="image_menu",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.image_menu),
            ),

            state=model.GeneratePublicationStates.upload_image,
            getter=self.generate_publication_getter.get_upload_image_data,
            parse_mode="HTML",
        )

    def get_social_network_select_window(self) -> Window:
        return Window(
            Multi(
                Const("üåê <b>–í—ã–±–æ—Ä —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π</b>\n\n"),
                Case(
                    {
                        True: Multi(
                            Const("‚ö†Ô∏è <b>–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π!</b>\n\n"),
                            Const(
                                "üîó <i>–î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.</i>\n\n"),
                            Const("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π."),
                        ),
                        False: Multi(
                            Const("üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:</b>\n\n"),
                            Case(
                                {
                                    True: Const("üì∫ Telegram - <b>–ø–æ–¥–∫–ª—é—á–µ–Ω</b>\n"),
                                    False: Const("üì∫ Telegram - <b>–Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω</b>\n"),
                                },
                                selector="telegram_connected"
                            ),
                            Case(
                                {
                                    True: Const("üîó VKontakte - <b>–ø–æ–¥–∫–ª—é—á–µ–Ω</b>\n\n"),
                                    False: Const("üîó VKontakte - <b>–Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω</b>\n\n"),
                                },
                                selector="vkontakte_connected"
                            ),
                            Const("‚úÖ <b>–í—ã–±–µ—Ä–∏—Ç–µ, –≥–¥–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å:</b>"),
                        ),
                    },
                    selector="no_connected_networks"
                ),
                sep="",
            ),

            # –ß–µ–∫–±–æ–∫—Å—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö)
            Column(
                Checkbox(
                    Const("‚úÖ Telegram"),
                    Const("‚ùå Telegram"),
                    id="telegram_checkbox",
                    default=False,
                    on_state_changed=self.generate_publication_service.handle_toggle_social_network,
                    when="telegram_connected",
                ),
                Checkbox(
                    Const("‚úÖ VKontakte"),
                    Const("‚ùå VKontakte"),
                    id="vkontakte_checkbox",
                    default=False,
                    on_state_changed=self.generate_publication_service.handle_toggle_social_network,
                    when="vkontakte_connected",
                ),
                when="has_available_networks",
            ),

            # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            Row(
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
                    id="publish_with_networks",
                    on_click=self.generate_publication_service.handle_publish_with_selected_networks,
                    when="has_available_networks",
                ),
                Button(
                    Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                    id="back_to_preview",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.preview),
                ),
            ),

            # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –¥–ª—è —Å–ª—É—á–∞—è –∫–æ–≥–¥–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ç–µ–π
            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–≤—å—é"),
                id="back_to_preview_no_networks",
                on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.preview),
                when="no_connected_networks",
            ),

            state=model.GeneratePublicationStates.social_network_select,
            getter=self.generate_publication_getter.get_social_network_select_data,
            parse_mode="HTML",
        )