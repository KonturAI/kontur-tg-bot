# internal/controller/tg/dialog/generate_publication/dialog.py
from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Row, Back, Select, Checkbox, Group, ManagedCheckbox
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.media import DynamicMedia

from internal import interface, model


class GeneratePublicationDialog(interface.IGeneratePublicationDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            generate_publication_service: interface.IGeneratePublicationDialogService,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.generate_publication_service = generate_publication_service

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_select_category_window(),
            self.get_input_text_window(),
            self.get_choose_image_option_window(),
            self.get_image_generation_window(),
            self.get_preview_window(),
            self.get_select_publish_location_window(),
        )

    def get_select_category_window(self) -> Window:
        """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏/—Ä—É–±—Ä–∏–∫–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Const("üè∑ <b>–®–∞–≥ 1/5: –í—ã–±–µ—Ä–∏—Ç–µ —Ä—É–±—Ä–∏–∫—É</b>\n\n"),
                Case(
                    {
                        True: Const("üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä—É–±—Ä–∏–∫–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:"),
                        False: Multi(
                            Const("‚ö†Ô∏è <b>–í –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä—É–±—Ä–∏–∫</b>\n\n"),
                            Const("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä—É–±—Ä–∏–∫"),
                        ),
                    },
                    selector="has_categories"
                ),
                sep="",
            ),

            Column(
                Select(
                    Format("üìå {item[name]}"),
                    id="category_select",
                    items="categories",
                    item_id_getter=lambda item: str(item["id"]),
                    on_click=self.generate_publication_service.handle_select_category,
                    when="has_categories",
                ),
            ),

            Button(
                Const("‚ùå –û—Ç–º–µ–Ω–∞"),
                id="cancel_to_content_menu",
                on_click=self.generate_publication_service.handle_go_to_content_menu,
            ),

            state=model.GeneratePublicationStates.select_category,
            getter=self.generate_publication_service.get_categories_data,
            parse_mode="HTML",
        )

    def get_input_text_window(self) -> Window:
        """–û–∫–Ω–æ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Const("‚úçÔ∏è <b>–®–∞–≥ 2/5: –û–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n\n"),
                Const("üí° <b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b>\n"),
                Const("<i>‚Ä¢ –ú–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –æ —á–µ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å—Ç\n"),
                Const("‚Ä¢ –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"),
                Const("‚Ä¢ –ò–ò —Å–æ–∑–¥–∞—Å—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è</i>\n\n"),
                Case(
                    {
                        True: Format("üìå <b>–í–∞—à —Ç–µ–∫—Å—Ç:</b>\n<i>{input_text}</i>"),
                        False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è..."),
                    },
                    selector="has_input_text"
                ),
                sep="",
            ),

            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            TextInput(
                id="text_input",
                on_success=self.generate_publication_service.handle_text_input,
            ),

            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è –≥–æ–ª–æ—Å–æ–≤—ã–µ)
            MessageInput(
                func=self.generate_publication_service.handle_voice_input,
                content_types=["voice", "audio"],
            ),

            Row(
                Button(
                    Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
                    id="next_to_image",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.choose_image_option),
                    when="has_input_text",
                ),
                Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            ),

            state=model.GeneratePublicationStates.input_text,
            getter=self.generate_publication_service.get_input_text_data,
            parse_mode="HTML",
        )

    def get_choose_image_option_window(self) -> Window:
        """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Const("üñº <b>–®–∞–≥ 3/5: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n\n"),
                Const("üé® <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –ò–ò"),
                    id="with_image",
                    on_click=self.generate_publication_service.handle_choose_with_image,
                ),
                Button(
                    Const("üìÑ –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç (–±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)"),
                    id="text_only",
                    on_click=self.generate_publication_service.handle_choose_text_only,
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.GeneratePublicationStates.choose_image_option,
            getter=self.generate_publication_service.get_image_option_data,
            parse_mode="HTML",
        )

    def get_image_generation_window(self) -> Window:
        """–û–∫–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏/–∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Const("üñº <b>–®–∞–≥ 4/5: –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n\n"),
                Case(
                    {
                        "generating": Multi(
                            Const("‚è≥ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...</b>\n\n"),
                            Const("üé® –ò–ò —Å–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n"),
                            Const("<i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 10-30 —Å–µ–∫—É–Ω–¥</i>"),
                        ),
                        "generated": Multi(
                            Const("‚úÖ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!</b>\n\n"),
                            Const("üéØ <b>–ß—Ç–æ –¥–∞–ª—å—à–µ?</b>"),
                        ),
                        "waiting": Multi(
                            Const("üé® <b>–í–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</b>\n\n"),
                            Const("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞\n"),
                            Const("‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é\n"),
                            Const("‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"),
                        ),
                        "waiting_prompt": Multi(
                            Const("‚úèÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                            Const("üí° <i>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å</i>"),
                        ),
                        "waiting_upload": Multi(
                            Const("üì§ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</b>\n\n"),
                            Const("üì∏ <i>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</i>"),
                        ),
                        "uploaded": Multi(
                            Const("‚úÖ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!</b>\n\n"),
                            Const("üì∏ –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"),
                        ),
                    },
                    selector="image_status"
                ),
                sep="",
            ),

            # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            DynamicMedia(
                selector="image_media",
                when="has_image",
            ),

            Column(
                Button(
                    Const("üé® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"),
                    id="auto_generate",
                    on_click=self.generate_publication_service.handle_auto_generate_image,
                    when="show_generation_buttons",
                ),
                Button(
                    Const("‚úèÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é"),
                    id="custom_prompt",
                    on_click=self.generate_publication_service.handle_request_custom_prompt,
                    when="show_generation_buttons",
                ),
                Button(
                    Const("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="upload_image",
                    on_click=self.generate_publication_service.handle_request_upload_image,
                    when="show_generation_buttons",
                ),
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å"),
                    id="regenerate_image",
                    on_click=self.generate_publication_service.handle_regenerate_image,
                    when="can_regenerate",
                ),
                Button(
                    Const("üóë –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="delete_image",
                    on_click=self.generate_publication_service.handle_delete_image,
                    when="has_image",
                ),
            ),

            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ - –≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–µ–Ω –≤ —ç—Ç–æ–º –æ–∫–Ω–µ
            TextInput(
                id="custom_prompt_input",
                on_success=self.generate_publication_service.handle_custom_prompt_image,
            ),

            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è —Ñ–æ—Ç–æ
            MessageInput(
                func=self.generate_publication_service.handle_upload_image,
                content_types=["photo"],
            ),

            Row(
                Button(
                    Const("‚û°Ô∏è –ö –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä—É"),
                    id="to_preview",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.preview),
                    when="can_continue",
                ),
                Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), when="not_generating"),
            ),

            state=model.GeneratePublicationStates.image_generation,
            getter=self.generate_publication_service.get_image_generation_data,
            parse_mode="HTML",
        )

    def get_preview_window(self) -> Window:
        """–û–∫–Ω–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        return Window(
            Multi(
                Const("üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Const("üëÄ <b>–®–∞–≥ 5/5: –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n"),
                Case(
                    {
                        True: Format("‚è∞ –ü—É–±–ª–∏–∫–∞—Ü–∏—è: <b>{publish_time}</b>\n\n"),
                        False: Const("‚è∞ –ü—É–±–ª–∏–∫–∞—Ü–∏—è: <b>–°—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è</b>\n\n"),
                    },
                    selector="has_scheduled_time"
                ),
                Const("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"),
                Format("<b>{publication_title}</b>\n\n"),
                Format("{publication_text}\n\n"),
                Case(
                    {
                        True: Format("üè∑ –¢–µ–≥–∏: {tags_list}\n"),
                        False: Const(""),
                    },
                    selector="has_tags"
                ),
                Const("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"),
                Const("üìç <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>"),
                sep="",
            ),

            # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            Column(
                Row(
                    Button(
                        Const("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"),
                        id="edit_text",
                        on_click=self.generate_publication_service.handle_edit_text,
                    ),
                    Button(
                        Const("üñº –ò–∑–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                        id="edit_image",
                        on_click=self.generate_publication_service.handle_edit_image,
                        when="has_image",
                    ),
                ),
                Button(
                    Const("‚è∞ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"),
                    id="schedule_time",
                    on_click=self.generate_publication_service.handle_schedule_time,
                ),
                Button(
                    Const("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —á–µ—Ä–Ω–æ–≤–∏–∫–∏"),
                    id="save_draft",
                    on_click=self.generate_publication_service.handle_add_to_drafts,
                ),
                Button(
                    Const("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"),
                    id="send_moderation",
                    on_click=self.generate_publication_service.handle_send_to_moderation,
                    when="requires_moderation",
                ),
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
                    id="publish_now",
                    on_click=lambda c, b, d: d.switch_to(model.GeneratePublicationStates.select_publish_location),
                    when="can_publish_directly",
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.GeneratePublicationStates.preview,
            getter=self.generate_publication_service.get_preview_data,
            parse_mode="HTML",
        )

    def get_select_publish_location_window(self) -> Window:
        """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        return Window(
            Multi(
                Const("üöÄ <b>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞</b>\n\n"),
                Const("üìç <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b>\n\n"),
                Case(
                    {
                        True: Format("‚úÖ –í—ã–±—Ä–∞–Ω–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º: <b>{selected_count}</b>"),
                        False: Const("‚ö†Ô∏è <i>–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É</i>"),
                    },
                    selector="has_selected_platforms"
                ),
                sep="",
            ),

            Column(
                Group(
                    ManagedCheckbox(
                        Const("‚úàÔ∏è Telegram"),
                        id="platform_telegram",
                        checked_text="‚úÖ",
                        unchecked_text="‚òê",
                        when="telegram_available",
                    ),
                    ManagedCheckbox(
                        Const("üì∑ Instagram"),
                        id="platform_instagram",
                        checked_text="‚úÖ",
                        unchecked_text="‚òê",
                        when="instagram_available",
                    ),
                    ManagedCheckbox(
                        Const("üìò VKontakte"),
                        id="platform_vkontakte",
                        checked_text="‚úÖ",
                        unchecked_text="‚òê",
                        when="vkontakte_available",
                    ),
                    ManagedCheckbox(
                        Const("üé¨ YouTube Shorts"),
                        id="platform_youtube",
                        checked_text="‚úÖ",
                        unchecked_text="‚òê",
                        when="youtube_available",
                    ),
                    width=1,
                ),
            ),

            Row(
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
                    id="confirm_publish",
                    on_click=self.generate_publication_service.handle_publish,
                    when="has_selected_platforms",
                ),
                Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            ),

            state=model.GeneratePublicationStates.select_publish_location,
            getter=self.generate_publication_service.get_publish_locations_data,
            parse_mode="HTML",
        )
