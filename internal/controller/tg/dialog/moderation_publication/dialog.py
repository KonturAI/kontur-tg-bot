from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Row, Back, Select
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.media import DynamicMedia

from internal import interface, model


class ModerationPublicationDialog(interface.IModerationPublicationDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            moderation_publication_service: interface.IModerationPublicationDialogService,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.moderation_publication_service = moderation_publication_service

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_moderation_list_window(),
            self.get_reject_comment_window(),
            self.get_edit_preview_window(),
            self.get_edit_title_window(),
            self.get_edit_tags_window(),
            self.get_edit_content_window(),
            self.get_edit_image_menu_window(),
            self.get_generate_image_window(),
            self.get_upload_image_window(),
        )

    def get_moderation_list_window(self) -> Window:
        """–û–∫–Ω–æ —Å–ø–∏—Å–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ - —Ç–µ–ø–µ—Ä—å —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é"""
        return Window(
            Multi(
                Const("üîç <b>–ú–æ–¥–µ—Ä–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π</b>\n\n"),
                Case(
                    {
                        True: Multi(
                            Format("üìä –í—Å–µ–≥–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: <b>{publications_count}</b>\n"),
                            Format("üìÖ –ü–µ—Ä–∏–æ–¥: <b>{period_text}</b>\n\n"),
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                            Format("üë§ –ê–≤—Ç–æ—Ä: <b>{author_name}</b>\n"),
                            Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n"),
                            Format("üìÖ –°–æ–∑–¥–∞–Ω–æ: {created_at}\n"),
                            Case(
                                {
                                    True: Format("‚è∞ –û–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏: <b>{waiting_time}</b>\n"),
                                    False: Const(""),
                                },
                                selector="has_waiting_time"
                            ),
                            Const("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"),
                            Format("<b>{publication_name}</b>\n\n"),
                            Format("{publication_text}\n\n"),
                            Case(
                                {
                                    True: Format("üè∑ –¢–µ–≥–∏: {publication_tags}"),
                                    False: Const(""),
                                },
                                selector="has_tags"
                            ),
                            Const("\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"),
                        ),
                        False: Multi(
                            Const("‚úÖ <b>–ù–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</b>\n\n"),
                            Const("<i>–í—Å–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏–ª–∏ –µ—â–µ –Ω–µ –ø–æ—Å—Ç—É–ø–∞–ª–∏</i>"),
                        ),
                    },
                    selector="has_publications"
                ),
                sep="",
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            # –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å–æ —Å—á–µ—Ç—á–∏–∫–æ–º –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
            Row(
                Button(
                    Const("‚¨ÖÔ∏è"),
                    id="prev_publication",
                    on_click=self.moderation_publication_service.handle_navigate_publication,
                    when="has_prev",
                ),
                Button(
                    Format("{current_index}/{total_count}"),
                    id="counter",
                    on_click=lambda c, b, d: c.answer(),  # –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
                    when="has_publications",
                ),
                Button(
                    Const("‚û°Ô∏è"),
                    id="next_publication",
                    on_click=self.moderation_publication_service.handle_navigate_publication,
                    when="has_next",
                ),
                when="has_publications",
            ),

            # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            Column(
                Row(
                    Button(
                        Const("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
                        id="edit",
                        on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview),
                        when="has_publications",
                    ),
                    Button(
                        Const("‚úÖ –ü—Ä–∏–Ω—è—Ç—å"),
                        id="approve",
                        on_click=self.moderation_publication_service.handle_approve_publication,
                        when="has_publications",
                    ),
                ),
                Row(
                    Button(
                        Const("üí¨ –û—Ç–∫–ª–æ–Ω–∏—Ç—å"),
                        id="reject_with_comment",
                        on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.reject_comment),
                        when="has_publications",
                    ),
                ),
                when="has_publications",
            ),

            Row(
                Button(
                    Const("‚óÄÔ∏è –í –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                    id="back_to_content_menu",
                    on_click=self.moderation_publication_service.handle_back_to_content_menu,
                ),
            ),

            state=model.ModerationPublicationStates.moderation_list,
            getter=self.moderation_publication_service.get_moderation_list_data,
            parse_mode="HTML",
        )

    def get_reject_comment_window(self) -> Window:
        """–û–∫–Ω–æ –≤–≤–æ–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏"""
        return Window(
            Multi(
                Const("‚ùå <b>–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üìÑ –ü—É–±–ª–∏–∫–∞—Ü–∏—è: <b>{publication_name}</b>\n"),
                Format("üë§ –ê–≤—Ç–æ—Ä: <b>{author_name}</b>\n\n"),
                Const("üí¨ <b>–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:</b>\n"),
                Const("<i>–ê–≤—Ç–æ—Ä –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –≤–∞—à–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º</i>\n\n"),
                Case(
                    {
                        True: Multi(
                            Const("üìù <b>–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n"),
                            Format("<i>{reject_comment}</i>"),
                        ),
                        False: Const("üí≠ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è..."),
                    },
                    selector="has_comment"
                ),
                sep="",
            ),

            TextInput(
                id="reject_comment_input",
                on_success=self.moderation_publication_service.handle_reject_comment_input,
            ),

            Row(
                Button(
                    Const("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ"),
                    id="send_rejection",
                    on_click=self.moderation_publication_service.handle_send_rejection,
                    when="has_comment",
                ),
                Button(
                    Const("–ù–∞–∑–∞–¥"),
                    id="back_to_moderation_list",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.moderation_list),
                ),
            ),

            state=model.ModerationPublicationStates.reject_comment,
            getter=self.moderation_publication_service.get_reject_comment_data,
            parse_mode="HTML",
        )

    def get_edit_preview_window(self) -> Window:
        """–û–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø—Ä–µ–≤—å—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        return Window(
            Multi(
                Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º—É –ø—É–±–ª–∏–∫–∞—Ü–∏—é
                Format("üë§ –ê–≤—Ç–æ—Ä: <b>{author_name}</b>\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n"),
                Format("üìÖ –°–æ–∑–¥–∞–Ω–æ: {created_at}\n\n"),
                Const("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"),
                Format("<b>{publication_name}</b>\n\n"),
                Format("{publication_text}\n\n"),
                Case(
                    {
                        True: Format("üè∑ –¢–µ–≥–∏: {publication_tags}"),
                        False: Const("üè∑ –¢–µ–≥–∏: <i>–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</i>"),
                    },
                    selector="has_tags"
                ),
                Case(
                    {
                        True: Const("\n\n<i>‚ùóÔ∏è –ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è</i>"),
                        False: Const(""),
                    },
                    selector="has_changes"
                ),
                Const("\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:</b>"),
                sep="",
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            Column(
                Button(
                    Const("‚úèÔ∏è –¢–µ–∫—Å—Ç"),
                    id="edit_text_menu",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_text_menu),
                ),
                Button(
                    Const("üñº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"),
                    id="edit_image",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_image_menu),
                ),
            ),

            Row(
                Button(
                    Const("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"),
                    id="save_edits",
                    on_click=self.moderation_publication_service.handle_save_edits,
                    when="has_changes",
                ),
                Button(
                    Const("–ù–∞–∑–∞–¥"),
                    id="back_to_moderation_list",
                    on_click=self.moderation_publication_service.handle_back_to_moderation_list,
                ),
            ),

            state=model.ModerationPublicationStates.edit_preview,
            getter=self.moderation_publication_service.get_edit_preview_data,
            parse_mode="HTML",
        )

    def get_edit_text_menu_window(self) -> Window:
        """–ù–æ–≤–æ–µ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
        return Window(
            Multi(
                Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</b>\n\n"),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë"),
                    id="regenerate_all",
                    on_click=self.moderation_publication_service.handle_regenerate_text,
                ),
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–º–ø—Ç–æ–º"),
                    id="regenerate_with_prompt",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.regenerate_text),
                ),
                Button(
                    Const("üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ"),
                    id="edit_title",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_title),
                ),
                Button(
                    Const("üè∑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–≥–∏"),
                    id="edit_tags",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_tags),
                ),
                Button(
                    Const("üìÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"),
                    id="edit_content",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_content),
                ),
            ),
            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–≤—å—é"),
                id="edit_preview",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview),
            ),

            state=model.ModerationPublicationStates.edit_text_menu,
            parse_mode="HTML",
        )

    def get_regenerate_text_window(self) -> Window:
        """–ù–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
        return Window(
            Multi(
                Const("üîÑ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É–∫–∞–∑–∞–Ω–∏—è–º–∏</b>\n\n"),
                Const("üí° <b>–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>\n"),
                Const(
                    "<i>–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ, –¥–æ–±–∞–≤—å –±–æ–ª—å—à–µ —ç–º–æ—Ü–∏–π, —É–±–µ—Ä–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –∏ —Ç.–¥.</i>\n\n"),
                Case(
                    {
                        True: Format("üìå <b>–í–∞—à–∏ —É–∫–∞–∑–∞–Ω–∏—è:</b>\n<i>{regenerate_prompt}</i>"),
                        False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞..."),
                    },
                    selector="has_regenerate_prompt"
                ),
                sep="",
            ),

            TextInput(
                id="regenerate_prompt_input",
                on_success=self.moderation_publication_service.handle_regenerate_text_with_prompt,
            ),
            Button(
                Const("üìÑ ‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="edit_text_menu",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_text_menu),
            ),

            state=model.ModerationPublicationStates.regenerate_text,
            getter=self.moderation_publication_service.get_regenerate_data,
            parse_mode="HTML",
        )

    def get_edit_title_window(self) -> Window:
        """–û–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è"""
        return Window(
            Multi(
                Const("üìù <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è</b>\n\n"),
                Format("–¢–µ–∫—É—â–µ–µ: <b>{current_title}</b>\n\n"),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:</b>\n"),
                Const("<i>–ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                sep="",
            ),

            TextInput(
                id="title_input",
                on_success=self.moderation_publication_service.handle_edit_title_save,
            ),

            Button(
                Const("–ù–∞–∑–∞–¥"),
                id="back_to_edit_preview",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview),
            ),

            state=model.ModerationPublicationStates.edit_title,
            getter=self.moderation_publication_service.get_edit_title_data,
            parse_mode="HTML",
        )

    def get_edit_tags_window(self) -> Window:
        """–û–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–≥–æ–≤"""
        return Window(
            Multi(
                Const("üè∑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–≥–æ–≤</b>\n\n"),
                Case(
                    {
                        True: Format("–¢–µ–∫—É—â–∏–µ —Ç–µ–≥–∏: <b>{current_tags}</b>\n\n"),
                        False: Const("–¢–µ–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n\n"),
                    },
                    selector="has_tags"
                ),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:</b>\n"),
                Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ø—Ä–æ–¥–∞–∂–∏, SMM</i>\n"),
                Const("<i>–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ–≥–æ–≤</i>"),
                sep="",
            ),

            TextInput(
                id="tags_input",
                on_success=self.moderation_publication_service.handle_edit_tags_save,
            ),

            Button(
                Const("–ù–∞–∑–∞–¥"),
                id="back_to_edit_preview",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview),
            ),

            state=model.ModerationPublicationStates.edit_tags,
            getter=self.moderation_publication_service.get_edit_tags_data,
            parse_mode="HTML",
        )

    def get_edit_content_window(self) -> Window:
        """–û–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
        return Window(
            Multi(
                Const("üìÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("–î–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞: <b>{current_text_length}</b> —Å–∏–º–≤–æ–ª–æ–≤\n\n"),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç:</b>\n"),
                Const("<i>–ú–∏–Ω–∏–º—É–º 50, –º–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤</i>\n"),
                Const("<i>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥</i>"),
                sep="",
            ),

            TextInput(
                id="content_input",
                on_success=self.moderation_publication_service.handle_edit_content_save,
            ),

            Button(
                Const("–ù–∞–∑–∞–¥"),
                id="back_to_edit_preview",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview),
            ),

            state=model.ModerationPublicationStates.edit_content,
            getter=self.moderation_publication_service.get_edit_content_data,
            parse_mode="HTML",
        )

    def get_edit_image_menu_window(self) -> Window:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"""
        return Window(
            Multi(
                Const("üñº <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</b>\n\n"),
                Case(
                    {
                        True: Multi(
                            Const("‚úÖ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b>\n"),
                            Case(
                                {
                                    True: Const("üì∏ –¢–∏–ø: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ\n"),
                                    False: Const("üé® –¢–∏–ø: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ\n"),
                                },
                                selector="is_custom_image"
                            ),
                        ),
                        False: Const("‚ùå <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b>\n"),
                    },
                    selector="has_image"
                ),
                Const("\nüìå <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ"),
                    id="generate_image",
                    on_click=self.moderation_publication_service.handle_generate_new_image,
                ),
                Button(
                    Const("üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"),
                    id="generate_image_prompt",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.generate_image),
                ),
                Button(
                    Const("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="upload_image",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.upload_image),
                ),
                Button(
                    Const("üóë –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="remove_image",
                    on_click=self.moderation_publication_service.handle_remove_image,
                    when="has_image",
                ),
            ),

            Button(
                Const("–ù–∞–∑–∞–¥"),
                id="back_to_edit_preview",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview),
            ),

            state=model.ModerationPublicationStates.edit_image_menu,
            getter=self.moderation_publication_service.get_image_menu_data,
            parse_mode="HTML",
        )

    def get_generate_image_window(self) -> Window:
        """–û–∫–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø—Ä–æ–º–ø—Ç–æ–º"""
        return Window(
            Multi(
                Const("üé® <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                Const("üí° <b>–û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</b>\n"),
                Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏–Ω–∏—Ö —Ç–æ–Ω–∞—Ö, –¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å</i>\n"),
                Const("<i>–ò–ª–∏: –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</i>\n\n"),
                Case(
                    {
                        True: Format("üìå <b>–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>\n<i>{image_prompt}</i>"),
                        False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è..."),
                    },
                    selector="has_image_prompt"
                ),
                sep="",
            ),

            TextInput(
                id="image_prompt_input",
                on_success=self.moderation_publication_service.handle_generate_image_with_prompt,
            ),

            Button(
                Const("–ù–∞–∑–∞–¥"),
                id="edit_image_menu",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_image_menu),
            ),

            state=model.ModerationPublicationStates.generate_image,
            getter=self.moderation_publication_service.get_image_prompt_data,
            parse_mode="HTML",
        )

    def get_upload_image_window(self) -> Window:
        """–û–∫–Ω–æ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        return Window(
            Multi(
                Const("üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                Const("üì∏ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b>\n\n"),
                Const("‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF\n"),
                Const("üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10 –ú–ë\n"),
                Const("üìê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: 16:9 –∏–ª–∏ 1:1\n\n"),
                Const("<i>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ</i>"),
                sep="",
            ),

            MessageInput(
                func=self.moderation_publication_service.handle_image_upload,
                content_types=["photo"],
            ),

            Button(
                Const("–ù–∞–∑–∞–¥"),
                id="edit_image_menu",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_image_menu),
            ),

            state=model.ModerationPublicationStates.upload_image,
            parse_mode="HTML",
        )