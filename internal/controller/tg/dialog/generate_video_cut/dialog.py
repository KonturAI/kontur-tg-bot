from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column
from aiogram_dialog.widgets.input import MessageInput

from internal import interface, model


class GenerateVideoCutDialog(interface.IGenerateVideoCutDialog):
    def __init__(
            self,
            tel: interface.ITelemetry,
            generate_video_cut_service: interface.IGenerateVideoCutService,
            generate_video_cut_getter: interface.IGenerateVideoCutGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.generate_video_cut_service = generate_video_cut_service
        self.generate_video_cut_getter = generate_video_cut_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_youtube_link_input_window(),
            self.get_video_generated_alert_window(),
        )

    def get_youtube_link_input_window(self) -> Window:
        return Window(
            Multi(
                Const("üé¨ <b>–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–∏–¥–µ–æ –∏–∑ YouTube</b>\n\n"),

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
                Case(
                    {
                        True: Multi(
                            Format("üîó <b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:</b>\n<i>{youtube_url}</i>\n\n"),
                            Const("‚è≥ <b>–í–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è</b>\n\n"),
                            Const("–Ø —Å–æ–∑–¥–∞–º –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ –∏–∑ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–∏.\n"),
                            Const("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.\n\n"),
                            Const("üì© <b>–Ø —É–≤–µ–¥–æ–º–ª—é –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã!</b>\n"),
                            Const("–ì–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ –ø–æ—è–≤—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ \"–ß–µ—Ä–Ω–æ–≤–∏–∫–∏\" ‚Üí \"–ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –≤–∏–¥–µ–æ-–Ω–∞—Ä–µ–∑–æ–∫\""),
                        ),
                        False: Multi(
                            # Error messages
                            Case(
                                {
                                    True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube\n\n"),
                                    False: Const(""),
                                },
                                selector="has_invalid_youtube_url"
                            ),
                            Case(
                                {
                                    True: Const(
                                        "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n\n"),
                                    False: Const(""),
                                },
                                selector="has_processing_error"
                            ),

                            # Instructions
                            Const("üìù <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b>\n"),
                            Const("‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ\n"),
                            Const("‚Ä¢ –Ø —Å–æ–∑–¥–∞–º –∏–∑ –Ω–µ–≥–æ –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ-–Ω–∞—Ä–µ–∑–∫–∏\n"),
                            Const("‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ –ø–æ—è–≤—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ \"–ß–µ—Ä–Ω–æ–≤–∏–∫–∏\"\n\n"),
                            Const("üîó <b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ:</b>\n"),
                            Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: https://www.youtube.com/watch?v=VIDEO_ID</i>\n\n"),

                            Case(
                                {
                                    True: Format("üìå <b>–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n<i>{youtube_url}</i>"),
                                    False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ YouTube..."),
                                },
                                selector="has_youtube_url"
                            ),
                        ),
                    },
                    selector="is_processing_video"
                ),
                sep="",
            ),

            MessageInput(
                func=self.generate_video_cut_service.handle_youtube_link_input,
                content_types=["text"],
            ),

            Column(
                Button(
                    Const("üè† –í –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                    id="to_content_menu",
                    on_click=self.generate_video_cut_service.handle_go_to_content_menu,
                    when="is_processing_video",
                ),
            ),

            state=model.GenerateVideoCutStates.input_youtube_link,
            getter=self.generate_video_cut_getter.get_youtube_input_data,
            parse_mode="HTML",
        )

    def get_video_generated_alert_window(self) -> Window:
        """–û–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –≥–æ—Ç–æ–≤—ã—Ö –≤–∏–¥–µ–æ"""
        return Window(
            Multi(
                Case(
                    {
                        True: Multi(
                            Const("üé¨ <b>–í–∞—à–∏ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤—ã!</b>\n\n"),
                            Format("–£ –≤–∞—Å –≥–æ—Ç–æ–≤–æ <b>{alerts_count}</b> {alerts_word}:\n\n"),
                            # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤
                            Format("{alerts_text}"),
                        ),
                        False: Multi(
                            Const("üé¨ <b>–í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!</b>\n\n"),
                            Format("–£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ <b>{video_count}</b> {video_word} –∏–∑ –≤–∏–¥–µ–æ:\n"),
                            Format("üì∫ <a href='{youtube_video_reference}'>–ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ</a>\n\n"),
                        ),
                    },
                    selector="has_multiple_alerts"
                ),
                Const("–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–µ—Ä–Ω–æ–≤–∏–∫–∏, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"),
                sep="",
            ),

            Column(
                Button(
                    Const("üìù –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –Ω–∞—Ä–µ–∑–æ–∫"),
                    id="to_video_drafts",
                    on_click=self.generate_video_cut_service.handle_go_to_video_drafts,
                ),
                Button(
                    Const("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                    id="to_main_menu",
                    on_click=self.generate_video_cut_service.handle_go_to_main_menu,
                ),
            ),

            state=model.GenerateVideoCutStates.video_generated_alert,
            getter=self.generate_video_cut_getter.get_video_alert_data,
            parse_mode="HTML",
        )