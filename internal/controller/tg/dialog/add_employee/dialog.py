# internal/controller/tg/dialog/add_employee/dialog.py
from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi
from aiogram_dialog.widgets.kbd import Button, Column, Row, Back, Select
from aiogram_dialog.widgets.input import TextInput

from internal import interface, model


class AddEmployeeDialog(interface.IAddEmployeeDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            add_employee_service: interface.IAddEmployeeDialogService,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.add_employee_service = add_employee_service

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_enter_account_id_window(),
            self.get_enter_name_window(),
            self.get_enter_role_window(),
            self.get_set_permissions_window(),
            self.get_confirm_employee_window(),
        )

    def get_enter_account_id_window(self) -> Window:
        return Window(
            Const("üë§ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
            Const("üìù <b>–®–∞–≥ 1/4: –í–≤–µ–¥–∏—Ç–µ ID –∞–∫–∫–∞—É–Ω—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
            Const("‚ö†Ô∏è <i>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ</i>"),

            TextInput(
                id="account_id_input",
                on_success=self.add_employee_service.handle_account_id_input,
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddEmployeeStates.enter_account_id,
            getter=self.add_employee_service.get_enter_account_id_data,
            parse_mode="HTML",
        )

    def get_enter_name_window(self) -> Window:
        """–û–∫–Ω–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        return Window(
            Multi(
                Const("üë§ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
                Const("üìù <b>–®–∞–≥ 2/4: –í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
                Format("ID –ê–∫–∫–∞—É–Ω—Ç–∞: <b>{account_id}</b>\n\n"),
                Const("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:"),
                sep="",
            ),

            TextInput(
                id="name_input",
                on_success=self.add_employee_service.handle_name_input,
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddEmployeeStates.enter_name,
            getter=self.add_employee_service.get_enter_name_data,
            parse_mode="HTML",
        )

    def get_enter_role_window(self) -> Window:
        """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        return Window(
            Multi(
                Const("üë§ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
                Const("üìù <b>–®–∞–≥ 3/4: –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
                Format("ID –ê–∫–∫–∞—É–Ω—Ç–∞: <b>{account_id}</b>\n"),
                Format("–ò–º—è: <b>{name}</b>\n\n"),
                Const("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:"),
                sep="",
            ),

            Column(
                Select(
                    Format("{item[title]}"),
                    id="role_select",
                    items="roles",
                    item_id_getter=lambda item: item["value"],
                    on_click=self.add_employee_service.handle_role_selection,
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddEmployeeStates.enter_role,
            getter=self.add_employee_service.get_enter_role_data,
            parse_mode="HTML",
        )

    def get_set_permissions_window(self) -> Window:
        """–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        return Window(
            Multi(
                Const("üë§ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
                Const("üìù <b>–®–∞–≥ 4/4: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
                Format("ID –ê–∫–∫–∞—É–Ω—Ç–∞: <b>{account_id}</b>\n"),
                Format("–ò–º—è: <b>{name}</b>\n"),
                Format("–†–æ–ª—å: <b>{role}</b>\n\n"),
                Const("‚öôÔ∏è <b>–†–∞–∑—Ä–µ—à–µ–Ω–∏—è:</b>"),
                sep="",
            ),

            Column(
                # –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –±–µ–∑ –æ–¥–æ–±—Ä–µ–Ω–∏—è
                Row(
                    Button(
                        Format("{no_moderation_icon}"),
                        id="toggle_no_moderation",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                    Button(
                        Const("–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –±–µ–∑ –æ–¥–æ–±—Ä–µ–Ω–∏—è"),
                        id="no_moderation_label",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                ),

                # –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥
                Row(
                    Button(
                        Format("{autoposting_icon}"),
                        id="toggle_autoposting",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                    Button(
                        Const("–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥"),
                        id="autoposting_label",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                ),

                # –î–æ–±–∞–≤–ª—è—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                Row(
                    Button(
                        Format("{add_employee_icon}"),
                        id="toggle_add_employee",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                    Button(
                        Const("–î–æ–±–∞–≤–ª—è—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"),
                        id="add_employee_label",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                ),

                # –ò–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                Row(
                    Button(
                        Format("{edit_permissions_icon}"),
                        id="toggle_edit_permissions",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                    Button(
                        Const("–ò–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"),
                        id="edit_permissions_label",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                ),

                # –ü–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å
                Row(
                    Button(
                        Format("{top_up_balance_icon}"),
                        id="toggle_top_up_balance",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                    Button(
                        Const("–ü–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å"),
                        id="top_up_balance_label",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                ),

                # –ü–æ–¥–∫–ª—é—á–∞—Ç—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
                Row(
                    Button(
                        Format("{social_networks_icon}"),
                        id="toggle_social_networks",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                    Button(
                        Const("–ü–æ–¥–∫–ª—é—á–∞—Ç—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"),
                        id="social_networks_label",
                        on_click=self.add_employee_service.handle_toggle_permission,
                    ),
                ),

                Button(
                    Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
                    id="next_to_confirm",
                    on_click=lambda c, b, d: d.switch_to(model.AddEmployeeStates.confirm_employee),
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddEmployeeStates.set_permissions,
            getter=self.add_employee_service.get_permissions_data,
            parse_mode="HTML",
        )

    def get_confirm_employee_window(self) -> Window:
        """–û–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        return Window(
            Multi(
                Const("üë§ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>\n\n"),
                Const("üìã <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>\n\n"),
                Format("ID –ê–∫–∫–∞—É–Ω—Ç–∞: <b>{account_id}</b>\n"),
                Format("–ò–º—è: <b>{name}</b>\n"),
                Format("–†–æ–ª—å: <b>{role}</b>\n\n"),
                Const("‚öôÔ∏è <b>–†–∞–∑—Ä–µ—à–µ–Ω–∏—è:</b>\n"),
                Format("{permissions_text}\n\n"),
                Const("‚ùì –í—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ?"),
                sep="",
            ),

            Row(
                Button(
                    Const("‚úÖ –°–æ–∑–¥–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"),
                    id="create_employee",
                    on_click=self.add_employee_service.handle_create_employee,
                ),
                Back(Const("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å")),
            ),

            state=model.AddEmployeeStates.confirm_employee,
            getter=self.add_employee_service.get_confirm_data,
            parse_mode="HTML",
        )