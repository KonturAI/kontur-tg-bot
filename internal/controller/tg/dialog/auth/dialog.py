from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Button, Url, Back

from internal import interface, model


class AuthDialog(interface.IAuthDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            auth_service: interface.IAuthService,
            auth_getter: interface.IAuthGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.auth_service = auth_service
        self.auth_getter = auth_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_user_agreement_window(),
            self.get_privacy_policy_window(),
            self.get_data_processing_window(),
            self.get_access_denied_window(),
        )

    def get_user_agreement_window(self) -> Window:
        return Window(
            Const("üìã <b>1/3 –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ:</b>\n"),
            Format("{user_agreement_link}"),
            Url(
                Const("üìñ –ß–∏—Ç–∞—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ"),
                Format("{user_agreement_link}"),
            ),
            Button(
                Const("‚úÖ –ü—Ä–∏–Ω—è—Ç—å"),
                id="accept_user_agreement",
                on_click=self.auth_service.accept_user_agreement,
            ),
            state=model.AuthStates.user_agreement,
            getter=self.auth_getter.get_agreement_data,
            parse_mode="HTML",
        )

    def get_privacy_policy_window(self) -> Window:
        return Window(
            Const("üîí <b>2/3 –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏:</b>\n"),
            Format("{privacy_policy_link}"),
            Url(
                Const("üìñ –ß–∏—Ç–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É"),
                Format("{privacy_policy_link}"),
            ),
            Button(
                Const("‚úÖ –ü—Ä–∏–Ω—è—Ç—å"),
                id="accept_privacy_policy",
                on_click=self.auth_service.accept_privacy_policy,
            ),
            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            state=model.AuthStates.privacy_policy,
            getter=self.auth_getter.get_agreement_data,
            parse_mode="HTML",
        )

    def get_data_processing_window(self) -> Window:
        return Window(
            Const("üìä <b>3/3 –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:</b>\n"),
            Format("{data_processing_link}"),
            Url(
                Const("üìñ –ß–∏—Ç–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ"),
                Format("{data_processing_link}"),
            ),
            Button(
                Const("‚úÖ –ü—Ä–∏–Ω—è—Ç—å"),
                id="accept_data_processing",
                on_click=self.auth_service.accept_data_processing,
            ),
            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            state=model.AuthStates.data_processing,
            getter=self.auth_getter.get_agreement_data,
            parse_mode="HTML",
        )

    def get_access_denied_window(self) -> Window:
        return Window(
            Const("üö´ <b>–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω</b>\n\n"),
            Const(
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è "
                "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n\n"
                "<b>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</b>\n"
            ),
            Format("‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏ —Å–æ–æ–±—â–∏—Ç–µ –µ–º—É –≤–∞—à ID –∞–∫–∫–∞—É–Ω—Ç–∞: {account_id}\n"),
            Button(
                Const("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞"),
                id="contact_support",
                on_click=self.auth_service.handle_access_denied,
            ),
            state=model.AuthStates.access_denied,
            getter=self.auth_getter.get_user_status,
            parse_mode="HTML",
        )
