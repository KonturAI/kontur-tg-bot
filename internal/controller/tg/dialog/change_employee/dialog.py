# internal/controller/tg/dialog/change_employee/dialog.py
from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Row, Back, ScrollingGroup, Select, NumberedPager, Group
from aiogram_dialog.widgets.input import TextInput

from internal import interface, model


class ChangeEmployeeDialog(interface.IChangeEmployeeDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            change_employee_service: interface.IChangeEmployeeDialogService,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.change_employee_service = change_employee_service

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_employee_list_window(),
            self.get_employee_detail_window(),
            self.get_change_permissions_window(),
            self.get_confirm_delete_window(),
        )

    def get_employee_list_window(self) -> Window:
        """–û–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""
        return Window(
            Multi(
                Const("üë• <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏</b>\n\n"),
                Format("üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: <b>{organization_name}</b>\n"),
                Format("üë§ –í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: <b>{employees_count}</b>\n\n"),
                Case(
                    {
                        True: Const("üîç <i>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:</i>\n"),
                        False: Const("üìã <i>–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</i>"),
                    },
                    selector="has_search"
                ),
                sep="",
            ),

            # –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
            TextInput(
                id="search_employee",
                on_success=self.change_employee_service.handle_search_employee,
            ),

            # –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
            ScrollingGroup(
                Select(
                    Format("üë§ {item[name]} ({item[role_display]})"),
                    id="employee_select",
                    items="employees",
                    item_id_getter=lambda item: str(item["account_id"]),
                    on_click=self.change_employee_service.handle_select_employee,
                ),
                id="employee_scroll",
                width=1,
                height=6,
                hide_on_single_page=True,
            ),

            # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
            NumberedPager(
                scroll="employee_scroll",
                when="show_pager",
            ),

            Row(
                Button(
                    Const("üîÑ –û–±–Ω–æ–≤–∏—Ç—å"),
                    id="refresh_list",
                    on_click=self.change_employee_service.handle_refresh_list,
                ),
                Button(
                    Case(
                        {
                            True: Const("‚ùå –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"),
                            False: Const(""),
                        },
                        selector="has_search"
                    ),
                    id="clear_search",
                    on_click=self.change_employee_service.handle_clear_search,
                    when="has_search",
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.ChangeEmployeeStates.employee_list,
            getter=self.change_employee_service.get_employee_list_data,
            parse_mode="HTML",
        )

    def get_employee_detail_window(self) -> Window:
        """–û–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ"""
        return Window(
            Multi(
                Const("üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ</b>\n\n"),
                Const("üìã <b>–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>\n"),
                Format("‚Ä¢ –ò–º—è: <b>{employee_name}</b>\n"),
                Format("‚Ä¢ ID –∞–∫–∫–∞—É–Ω—Ç–∞: <code>{account_id}</code>\n"),
                Format("‚Ä¢ –†–æ–ª—å: <b>{role_display}</b>\n"),
                Format("‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω: {created_at}\n\n"),

                Const("üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"),
                Format("‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏–π: <b>{publications_count}</b>\n"),
                Format("‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞: <b>{generations_count}</b>\n\n"),

                Const("‚öôÔ∏è <b>–¢–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:</b>\n"),
                Format("{permissions_text}\n"),

                Case(
                    {
                        True: Const("\n‚ö†Ô∏è <i>–≠—Ç–æ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç</i>"),
                        False: Const(""),
                    },
                    selector="is_current_user"
                ),
                sep="",
            ),

            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ –≤ —Å—Ç—Ä–æ–∫—É
            Row(
                Button(
                    Const("‚¨ÖÔ∏è"),
                    id="prev_employee",
                    on_click=self.change_employee_service.handle_navigate_employee,
                    when="has_prev",
                ),
                Button(
                    Format("üìç {current_index}/{total_count}"),
                    id="current_position",
                    on_click=None,
                ),
                Button(
                    Const("‚û°Ô∏è"),
                    id="next_employee",
                    on_click=self.change_employee_service.handle_navigate_employee,
                    when="has_next",
                ),
            ),

            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∫–æ–ª–æ–Ω–∫—É
            Column(
                Button(
                    Const("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è"),
                    id="edit_permissions",
                    on_click=lambda c, b, d: d.switch_to(model.ChangeEmployeeStates.change_permissions),
                    when="can_edit_permissions",
                ),
                Button(
                    Const("üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"),
                    id="change_role",
                    on_click=self.change_employee_service.handle_show_role_change,
                    when="can_change_role",
                ),
                Button(
                    Const("üóë –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"),
                    id="delete_employee",
                    on_click=lambda c, b, d: d.switch_to(model.ChangeEmployeeStates.confirm_delete),
                    when="can_delete",
                ),

                Back(Const("‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É")),
            ),

            state=model.ChangeEmployeeStates.employee_detail,
            getter=self.change_employee_service.get_employee_detail_data,
            parse_mode="HTML",
        )

    def get_change_permissions_window(self) -> Window:
        """–û–∫–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        return Window(
            Multi(
                Const("‚öôÔ∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π</b>\n\n"),
                Format("üë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫: <b>{employee_name}</b>\n"),
                Format("üè∑ –†–æ–ª—å: <b>{role_display}</b>\n\n"),
                Const("üìù <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:</b>\n"),
                Const("<i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è</i>\n\n"),

                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"),
                        False: Const(""),
                    },
                    selector="has_changes"
                ),
                sep="",
            ),

            Column(
                # –†–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π –Ω–∞ –ø—Ä–∞–≤–∏–ª–æ
                Button(
                    Format("{no_moderation_icon} –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –±–µ–∑ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"),
                    id="toggle_no_moderation",
                    on_click=self.change_employee_service.handle_toggle_permission,
                ),
                Button(
                    Format("{autoposting_icon} –ê–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥"),
                    id="toggle_autoposting",
                    on_click=self.change_employee_service.handle_toggle_permission,
                ),
                Button(
                    Format("{add_employee_icon} –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"),
                    id="toggle_add_employee",
                    on_click=self.change_employee_service.handle_toggle_permission,
                ),
                Button(
                    Format("{edit_permissions_icon} –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π"),
                    id="toggle_edit_permissions",
                    on_click=self.change_employee_service.handle_toggle_permission,
                ),
                Button(
                    Format("{top_up_balance_icon} –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞"),
                    id="toggle_top_up_balance",
                    on_click=self.change_employee_service.handle_toggle_permission,
                ),
                Button(
                    Format("{social_networks_icon} –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Ü—Å–µ—Ç–µ–π"),
                    id="toggle_social_networks",
                    on_click=self.change_employee_service.handle_toggle_permission,
                ),
            ),

            Row(
                Button(
                    Const("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å"),
                    id="save_permissions",
                    on_click=self.change_employee_service.handle_save_permissions,
                    when="has_changes",
                ),
                Button(
                    Const("‚Ü©Ô∏è –°–±—Ä–æ—Å–∏—Ç—å"),
                    id="reset_permissions",
                    on_click=self.change_employee_service.handle_reset_permissions,
                    when="has_changes",
                ),
                Back(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
            ),

            state=model.ChangeEmployeeStates.change_permissions,
            getter=self.change_employee_service.get_permissions_data,
            parse_mode="HTML",
        )

    def get_confirm_delete_window(self) -> Window:
        """–û–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        return Window(
            Multi(
                Const("‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è</b>\n\n"),
                Format("–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞?\n\n"),
                Format("üë§ <b>{employee_name}</b>\n"),
                Format("ID: {account_id}\n"),
                Format("–†–æ–ª—å: {role_display}\n\n"),
                Const("‚ùó <b>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!</b>\n"),
                Const("–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø–æ—Ç–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏."),
                sep="",
            ),

            Row(
                Button(
                    Const("üóë –î–∞, —É–¥–∞–ª–∏—Ç—å"),
                    id="confirm_delete",
                    on_click=self.change_employee_service.handle_delete_employee,
                ),
                Back(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
            ),

            state=model.ChangeEmployeeStates.confirm_delete,
            getter=self.change_employee_service.get_delete_confirmation_data,
            parse_mode="HTML",
        )