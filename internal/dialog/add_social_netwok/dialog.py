from aiogram_dialog import Window, Dialog, ShowMode
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Back, Checkbox
from aiogram_dialog.widgets.input import TextInput

from internal import interface, model


class AddSocialNetworkDialog(interface.IAddSocialNetworkDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            add_social_network_service: interface.IAddSocialNetworkService,
            add_social_network_getter: interface.IAddSocialNetworkGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.add_social_network_service = add_social_network_service
        self.add_social_network_getter = add_social_network_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_select_network_window(),
            self.get_telegram_main_window(),
            self.get_telegram_connect_window(),
            self.get_telegram_edit_window(),
            self.get_telegram_change_username_window(),
            self.get_vkontakte_setup_window(),
            self.get_youtube_setup_window(),
            self.get_instagram_setup_window(),
        )

    def get_select_network_window(self) -> Window:
        return Window(
            Multi(
                Const("üåê <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π</b>\n\n"),
                Const("üì± <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è:</b>\n"),
                Const("üí° <i>–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –ø–æ–º–µ—á–µ–Ω—ã –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º</i>\n"),
                Const("ü§ñ <i>–ó–≤–µ–∑–¥–æ—á–∫–∞ (*) –æ–∑–Ω–∞—á–∞–µ—Ç –∞–≤—Ç–æ–≤—ã–±–æ—Ä –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</i>"),
                sep="",
            ),

            Column(
                Button(
                    Case(
                        {
                            "connected_autoselect": Const("‚úÖ Telegram*"),
                            "connected_no_autoselect": Const("‚úÖ Telegram"),
                            "not_connected": Const("üì± Telegram"),
                        },
                        selector="telegram_status"
                    ),
                    id="select_telegram",
                    on_click=lambda c, b, d: d.switch_to(model.AddSocialNetworkStates.telegram_main, ShowMode.EDIT),
                ),
                Button(
                    Case(
                        {
                            "connected_autoselect": Const("‚úÖ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ*"),
                            "connected_no_autoselect": Const("‚úÖ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"),
                            "not_connected": Const("üîµ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"),
                        },
                        selector="vkontakte_status"
                    ),
                    id="select_vkontakte",
                    on_click=lambda c, b, d: d.switch_to(model.AddSocialNetworkStates.vkontakte_setup, ShowMode.EDIT),
                ),
                Button(
                    Case(
                        {
                            "connected_autoselect": Const("‚úÖ YouTube*"),
                            "connected_no_autoselect": Const("‚úÖ YouTube"),
                            "not_connected": Const("üé• YouTube"),
                        },
                        selector="youtube_status"
                    ),
                    id="select_youtube",
                    on_click=lambda c, b, d: d.switch_to(model.AddSocialNetworkStates.youtube_setup, ShowMode.EDIT),
                ),
                Button(
                    Case(
                        {
                            "connected_autoselect": Const("‚úÖ Instagram*"),
                            "connected_no_autoselect": Const("‚úÖ Instagram"),
                            "not_connected": Const("üì∑ Instagram"),
                        },
                        selector="instagram_status"
                    ),
                    id="select_instagram",
                    on_click=lambda c, b, d: d.switch_to(model.AddSocialNetworkStates.instagram_setup, ShowMode.EDIT),
                ),
            ),

            Button(
                Const("‚óÄÔ∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π"),
                id="go_to_organization_menu",
                on_click=self.add_social_network_service.handle_go_to_organization_menu,
            ),

            state=model.AddSocialNetworkStates.select_network,
            getter=self.add_social_network_getter.get_select_network_data,
            parse_mode="HTML",
        )

    def get_telegram_main_window(self) -> Window:
        return Window(
            Multi(
                Const("üì± <b>Telegram</b>\n\n"),
                Case(
                    {
                        True: Multi(
                            Const("‚úÖ <b>–ü–æ–¥–∫–ª—é—á–µ–Ω</b>\n\n"),
                            Format("üì£ <b>–ö–∞–Ω–∞–ª:</b> @{tg_channel_username}\n"),
                            Case(
                                {
                                    True: Const("ü§ñ <b>–ê–≤—Ç–æ–≤—ã–±–æ—Ä:</b> ‚úÖ –≤–∫–ª—é—á–µ–Ω\n"),
                                    False: Const("ü§ñ <b>–ê–≤—Ç–æ–≤—ã–±–æ—Ä:</b> ‚ùå –≤—ã–∫–ª—é—á–µ–Ω\n"),
                                },
                                selector="telegram_autoselect"
                            ),
                            Const(
                                "\nüí° <i>–ê–≤—Ç–æ–≤—ã–±–æ—Ä –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞</i>"),
                        ),
                        False: Multi(
                            Const("‚ùå <b>–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω</b>\n\n"),
                            Const("üìù <b>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b>\n"),
                            Const("1Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –≤ Telegram\n"),
                            Const("2Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ @KonturContentBot –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã\n"),
                            Const("3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–∫–ª—é—á–∏—Ç—å¬ª\n\n"),
                            Const("‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –£ –∫–∞–Ω–∞–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π username"),
                        ),
                    },
                    selector="telegram_connected"
                ),
                sep="",
            ),

            Column(
                # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
                Button(
                    Const("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å"),
                    id="edit_telegram",
                    on_click=lambda c, b, d: d.switch_to(model.AddSocialNetworkStates.telegram_edit, ShowMode.EDIT),
                    when="telegram_connected"
                ),
                Button(
                    Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"),
                    id="delete_telegram",
                    on_click=self.add_social_network_service.handle_disconnect_telegram,
                    when="telegram_connected"
                ),

                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                Button(
                    Const("üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å"),
                    id="connect_telegram",
                    on_click=lambda c, b, d: d.switch_to(model.AddSocialNetworkStates.telegram_connect, ShowMode.EDIT),
                    when="telegram_not_connected"
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddSocialNetworkStates.telegram_main,
            getter=self.add_social_network_getter.get_telegram_main_data,
            parse_mode="HTML",
        )

    def get_telegram_connect_window(self) -> Window:
        return Window(
            Multi(
                Const("üîó <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Telegram –∫–∞–Ω–∞–ª–∞</b>\n\n"),

                # –®–∞–≥ 1: –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞
                Case(
                    {
                        False: Const("üìù <b>–®–∞–≥ 1:</b> –í–≤–µ–¥–∏—Ç–µ username –∫–∞–Ω–∞–ª–∞ (–±–µ–∑ @)\n\n‚å®Ô∏è <i>–í–≤–µ–¥–∏—Ç–µ username:</i>"),
                        True: Format("‚úÖ <b>–®–∞–≥ 1:</b> Username –≤–≤–µ–¥–µ–Ω (@{tg_channel_username})\n\n"),
                    },
                    selector="has_username"
                ),

                # –®–∞–≥ 2: –ê–≤—Ç–æ–≤—ã–±–æ—Ä (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ username)
                Case(
                    {
                        True: Const(
                            "ü§ñ <b>–®–∞–≥ 2:</b> –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–≤—ã–±–æ—Ä–∞\n\nüí° <i>–ï—Å–ª–∏ –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–≤—ã–±–æ—Ä, –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞</i>"),
                        False: Const(""),
                    },
                    selector="has_username"
                ),

                # –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                Case(
                    {
                        True: Const("\n\n‚ùå <b>–û—à–∏–±–∫–∞:</b> Username –∫–∞–Ω–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"),
                        False: Const(""),
                    },
                    selector="has_void_tg_channel_username"
                ),
                Case(
                    {
                        True: Const(
                            "\n\n‚ùå <b>–û—à–∏–±–∫–∞:</b> –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç username. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–∞—Ç–∏–Ω–∏—Ü—É, —Ü–∏—Ñ—Ä—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è (5-32 —Å–∏–º–≤–æ–ª–∞)"),
                        False: Const(""),
                    },
                    selector="has_invalid_tg_channel_username"
                ),
                Case(
                    {
                        True: Const("\n\n‚ùå <b>–û—à–∏–±–∫–∞:</b> –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"),
                        False: Const(""),
                    },
                    selector="has_channel_not_found"
                ),
                sep="",
            ),

            TextInput(
                id="tg_channel_username_input",
                on_success=self.add_social_network_service.handle_tg_channel_username_input,
            ),

            Column(
                Checkbox(
                    Const("ü§ñ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–≤—ã–±–æ—Ä"),
                    Const("ü§ñ –ê–≤—Ç–æ–≤—ã–±–æ—Ä –≤–∫–ª—é—á–µ–Ω"),
                    id="autoselect_checkbox",
                    default=False,
                    when="has_username"
                ),

                Button(
                    Const("üíæ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–Ω–∞–ª"),
                    id="save_telegram_connection",
                    on_click=self.add_social_network_service.handle_save_telegram_connection,
                    when="has_username"
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddSocialNetworkStates.telegram_connect,
            getter=self.add_social_network_getter.get_telegram_connect_data,
            parse_mode="HTML",
        )

    def get_telegram_edit_window(self) -> Window:
        return Window(
            Multi(
                Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –∫–∞–Ω–∞–ª–∞</b>\n\n"),
                Format("üì£ <b>–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª:</b> @{tg_channel_username}\n"),
                Case(
                    {
                        True: Const("ü§ñ <b>–ê–≤—Ç–æ–≤—ã–±–æ—Ä:</b> ‚úÖ –≤–∫–ª—é—á–µ–Ω\n\n"),
                        False: Const("ü§ñ <b>–ê–≤—Ç–æ–≤—ã–±–æ—Ä:</b> ‚ùå –≤—ã–∫–ª—é—á–µ–Ω\n\n"),
                    },
                    selector="telegram_autoselect"
                ),
                Const("‚öôÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>"),
                sep="",
            ),

            Column(
                # –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞
                Button(
                    Const("üìù –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∫–∞–Ω–∞–ª–∞"),
                    id="change_username",
                    on_click=lambda c, b, d: d.switch_to(model.AddSocialNetworkStates.telegram_change_username, ShowMode.EDIT),
                ),

                # –ß–µ–∫–±–æ–∫—Å –∞–≤—Ç–æ–≤—ã–±–æ—Ä–∞
                Checkbox(
                    Const("ü§ñ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–≤—ã–±–æ—Ä"),
                    Const("ü§ñ –ê–≤—Ç–æ–≤—ã–±–æ—Ä –≤–∫–ª—é—á–µ–Ω"),
                    id="telegram_autoselect_checkbox",
                    default=False,
                ),

                # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∞–≤—Ç–æ–≤—ã–±–æ—Ä–∞
                Button(
                    Const("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"),
                    id="save_changes",
                    on_click=self.add_social_network_service.handle_save_telegram_changes,
                    when="has_changes"
                ),
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddSocialNetworkStates.telegram_edit,
            getter=self.add_social_network_getter.get_telegram_edit_data,
            parse_mode="HTML",
        )

    def get_telegram_change_username_window(self) -> Window:
        return Window(
            Multi(
                Const("üìù <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ Telegram –∫–∞–Ω–∞–ª–∞</b>\n\n"),
                Format("üì£ <b>–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª:</b> @{tg_channel_username}\n\n"),
                Const("‚å®Ô∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π username –∫–∞–Ω–∞–ª–∞ (–±–µ–∑ @):</b>\n"),
                Const("üí° <i>–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞</i>\n"),

                # –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                Case(
                    {
                        True: Const("\n‚ùå <b>–û—à–∏–±–∫–∞:</b> Username –∫–∞–Ω–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"),
                        False: Const(""),
                    },
                    selector="has_void_tg_channel_username"
                ),
                Case(
                    {
                        True: Const(
                            "\n‚ùå <b>–û—à–∏–±–∫–∞:</b> –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç username. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–∞—Ç–∏–Ω–∏—Ü—É, —Ü–∏—Ñ—Ä—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è (5-32 —Å–∏–º–≤–æ–ª–∞)"),
                        False: Const(""),
                    },
                    selector="has_invalid_tg_channel_username"
                ),
                Case(
                    {
                        True: Const("\n‚ùå <b>–û—à–∏–±–∫–∞:</b> –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"),
                        False: Const(""),
                    },
                    selector="has_channel_not_found"
                ),
                sep="",
            ),

            # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ username
            TextInput(
                id="new_tg_channel_username_input",
                on_success=self.add_social_network_service.handle_new_tg_channel_username_input,
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddSocialNetworkStates.telegram_change_username,
            getter=self.add_social_network_getter.get_telegram_change_username_data,
            parse_mode="HTML",
        )

    def get_vkontakte_setup_window(self) -> Window:
        return Window(
            Multi(
                Const("üîµ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>\n\n"),
                Const("üîú <i>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>\n"),
                Const("üìÖ <b>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:</b>\n"),
                Const("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –≥—Ä—É–ø–ø—É\n"),
                Const("‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å—Ç–∏–Ω–≥–∞\n"),
                Const("‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ö–≤–∞—Ç–æ–≤\n"),
                Const("‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–≤—ã–±–æ—Ä–∞"),
                sep="",
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddSocialNetworkStates.vkontakte_setup,
            getter=self.add_social_network_getter.get_vkontakte_setup_data,
            parse_mode="HTML",
        )

    def get_youtube_setup_window(self) -> Window:
        return Window(
            Multi(
                Const("üé• <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ YouTube</b>\n\n"),
                Const("üîú <i>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>\n"),
                Const("üìÖ <b>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:</b>\n"),
                Const("‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ YouTube\n"),
                Const("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∏–¥–µ–æ\n"),
                Const("‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–≤—ã–±–æ—Ä–∞ –¥–ª—è –≤–∏–¥–µ–æ–∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"),
                Const("‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –∏ —Ç–µ–≥–∞–º–∏"),
                sep="",
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddSocialNetworkStates.youtube_setup,
            getter=self.add_social_network_getter.get_youtube_setup_data,
            parse_mode="HTML",
        )

    def get_instagram_setup_window(self) -> Window:
        return Window(
            Multi(
                Const("üì∑ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Instagram</b>\n\n"),
                Const("üîú <i>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>\n"),
                Const("üìÖ <b>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:</b>\n"),
                Const("‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–∞–∫–∫–∞—É–Ω—Ç–∞ Instagram\n"),
                Const("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤ –∏ stories\n"),
                Const("‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–≤—ã–±–æ—Ä–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"),
                Const("‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π"),
                sep="",
            ),

            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),

            state=model.AddSocialNetworkStates.instagram_setup,
            getter=self.add_social_network_getter.get_instagram_setup_data,
            parse_mode="HTML",
        )