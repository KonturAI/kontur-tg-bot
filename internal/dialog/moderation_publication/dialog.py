from aiogram import F
from aiogram_dialog import Window, Dialog, ShowMode
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Row, Checkbox
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.media import DynamicMedia

from internal import interface, model


class ModerationPublicationDialog(interface.IModerationPublicationDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            moderation_publication_service: interface.IModerationPublicationService,
            moderation_publication_getter: interface.IModerationPublicationGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.moderation_publication_service = moderation_publication_service
        self.moderation_publication_getter = moderation_publication_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_moderation_list_window(),
            self.get_reject_comment_window(),
            self.get_edit_preview_window(),
            self.get_edit_text_menu_window(),
            self.get_edit_text_window(),
            self.get_edit_image_menu_window(),
            self.get_upload_image_window(),
            self.get_social_network_select_window(),
        )

    def get_moderation_list_window(self) -> Window:
        return Window(
            Multi(
                Const("üîç <b>–ú–æ–¥–µ—Ä–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π</b>\n\n"),
                Case(
                    {
                        True: Multi(
                            Format("{publication_text}\n\n"),
                            Format("üë§ –ê–≤—Ç–æ—Ä: <b>{creator_name}</b>\n"),
                            Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n"),
                            Format("üìÖ –°–æ–∑–¥–∞–Ω–æ: {created_at}\n"),

                        ),
                        False: Multi(
                            Const("‚úÖ <b>–ù–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</b>\n\n"),
                            Const("<i>–í—Å–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏–ª–∏ –µ—â–µ –Ω–µ –ø–æ—Å—Ç—É–ø–∞–ª–∏</i>"),
                        ),
                    },
                    selector="has_publications"
                ),
                sep="",
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            Row(
                Button(
                    Const("‚¨ÖÔ∏è"),
                    id="prev_publication",
                    on_click=self.moderation_publication_service.handle_navigate_publication,
                    when="has_prev",
                ),
                Button(
                    Format("{current_index}/{total_count}"),
                    id="counter",
                    on_click=lambda c, b, d: c.answer(),
                    when="has_publications",
                ),
                Button(
                    Const("‚û°Ô∏è"),
                    id="next_publication",
                    on_click=self.moderation_publication_service.handle_navigate_publication,
                    when="has_next",
                ),
                when="has_publications",
            ),

            Column(
                Row(
                    Button(
                        Const("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
                        id="edit",
                        on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview),
                    ),
                    Button(
                        Const("üåê –í—ã–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"),
                        id="select_social_network",
                        on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.social_network_select,
                                                             ShowMode.EDIT),
                    ),
                    Button(
                        Const("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
                        id="approve",
                        on_click=self.moderation_publication_service.handle_publish_now,
                    ),
                ),
                Row(
                    Button(
                        Const("üí¨ –û—Ç–∫–ª–æ–Ω–∏—Ç—å"),
                        id="reject_with_comment",
                        on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.reject_comment),
                    ),
                ),
                when="has_publications",
            ),

            Row(
                Button(
                    Const("‚óÄÔ∏è –í –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                    id="back_to_content_menu",
                    on_click=self.moderation_publication_service.handle_back_to_content_menu,
                ),
            ),

            state=model.ModerationPublicationStates.moderation_list,
            getter=self.moderation_publication_getter.get_moderation_list_data,
            parse_mode="HTML",
        )

    def get_reject_comment_window(self) -> Window:
        return Window(
            Multi(
                Const("‚ùå <b>–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("üìÑ –ü—É–±–ª–∏–∫–∞—Ü–∏—è: <b>{publication_name}</b>\n"),
                Format("üë§ –ê–≤—Ç–æ—Ä: <b>{creator_name}</b>\n\n"),
                Const("üí¨ <b>–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:</b>\n"),
                Const("<i>–ê–≤—Ç–æ—Ä –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –≤–∞—à–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º</i>\n\n"),
                Case(
                    {
                        True: Multi(
                            Const("üìù <b>–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n"),
                            Format("<i>{reject_comment}</i>"),
                        ),
                        False: Const("üí≠ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è..."),
                    },
                    selector="has_comment"
                ),
                sep="",
            ),

            TextInput(
                id="reject_comment_input",
                on_success=self.moderation_publication_service.handle_reject_comment_input,
            ),

            Row(
                Button(
                    Const("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ"),
                    id="send_rejection",
                    on_click=self.moderation_publication_service.handle_send_rejection,
                    when="has_comment",
                ),
                Button(
                    Const("–ù–∞–∑–∞–¥"),
                    id="back_to_moderation_list",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.moderation_list),
                ),
            ),

            state=model.ModerationPublicationStates.reject_comment,
            getter=self.moderation_publication_getter.get_reject_comment_data,
            parse_mode="HTML",
        )

    def get_edit_preview_window(self) -> Window:
        return Window(
            Multi(
                Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Format("{publication_text}\n\n"),
                Format("üë§ –ê–≤—Ç–æ—Ä: <b>{creator_name}</b>\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n"),
                Format("üìÖ –°–æ–∑–¥–∞–Ω–æ: {created_at}\n\n"),

                Case(
                    {
                        True: Format("\n\nüñº –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {current_image_index} –∏–∑ {total_images}"),
                        False: Const(""),
                    },
                    selector="has_multiple_images"
                ),
                Case(
                    {
                        True: Const("\n\n<i>‚ùóÔ∏è –ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è</i>"),
                        False: Const(""),
                    },
                    selector="has_changes"
                ),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:</b>"),
                sep="",
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),


            Row(
                Button(
                    Const("‚¨ÖÔ∏è"),
                    id="prev_image",
                    on_click=self.moderation_publication_service.handle_prev_image,
                    when="has_multiple_images",
                ),
                Button(
                    Const("‚û°Ô∏è"),
                    id="next_image",
                    on_click=self.moderation_publication_service.handle_next_image,
                    when="has_multiple_images",
                ),
                when="has_multiple_images",
            ),

            Column(
                Button(
                    Const("‚úèÔ∏è –¢–µ–∫—Å—Ç"),
                    id="edit_text_menu",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_text_menu),
                ),
                Button(
                    Const("üñº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"),
                    id="edit_image",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_image_menu),
                ),
            ),

            Row(
                Button(
                    Const("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"),
                    id="save_edits",
                    on_click=self.moderation_publication_service.handle_save_edits,
                    when="has_changes",
                ),
                Button(
                    Const("–ù–∞–∑–∞–¥"),
                    id="back_to_moderation_list",
                    on_click=self.moderation_publication_service.handle_back_to_moderation_list,
                ),
            ),

            state=model.ModerationPublicationStates.edit_preview,
            getter=self.moderation_publication_getter.get_edit_preview_data,
            parse_mode="HTML",
        )

    def get_edit_text_menu_window(self) -> Window:
        return Window(
            Multi(
                Case(
                    {
                        False: Multi(
                            Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</b>\n"),
                            Const("üí≠ <i>–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ ‚Äî —è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é –µ–≥–æ!</i>"),
                        ),
                        True: Case(
                            {
                                True: Multi(
                                    Format("üìù <b>–í–∞—à–∏ —É–∫–∞–∑–∞–Ω–∏—è:</b>\n<code>{regenerate_prompt}</code>\n"),
                                    Const("‚è≥ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç...</b>\n"),
                                    Const("üïê <i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.</i>"),
                                ),
                                False: Multi(
                                    Const("‚è≥ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç...</b>\n"),
                                    Const("üïê <i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.</i>"),
                                ),
                            },
                            selector="has_regenerate_prompt"
                        )
                    },
                    selector="is_regenerating_text"
                ),
                sep="",
            ),

            Column(
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç"),
                    id="regenerate_all",
                    on_click=self.moderation_publication_service.handle_regenerate_text,
                    when=~F["is_regenerating_text"]
                ),
                Button(
                    Const("‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç"),
                    id="edit_content",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_text, ShowMode.EDIT),
                    when=~F["is_regenerating_text"]
                ),
            ),
            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="preview",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview, ShowMode.EDIT),
                when=~F["is_regenerating_text"]
            ),

            TextInput(
                id="regenerate_prompt_input",
                on_success=self.moderation_publication_service.handle_regenerate_text_with_prompt,
            ),

            state=model.ModerationPublicationStates.edit_text_menu,
            getter=self.moderation_publication_getter.get_edit_text_data,
            parse_mode="HTML",
        )

    def get_edit_text_window(self) -> Window:
        return Window(
            Multi(
                Const("‚úçÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</b>\n"),
                Const("üìù <i>–ù–∞–ø–∏—à–∏—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</i>"),
                # Add error messages
                Case(
                    {
                        True: Const("\n‚ùå <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"),
                        False: Const(""),
                    },
                    selector="has_void_text"
                ),
                Case(
                    {
                        True: Const("\nüìè <b>–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç</b>\n<i>–ú–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                        False: Const(""),
                    },
                    selector="has_small_text"
                ),
                Case(
                    {
                        True: Const("\nüìè <b>–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç</b>\n<i>–ú–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                        False: Const(""),
                    },
                    selector="has_big_text"
                ),
                sep="",
            ),

            TextInput(
                id="text_input",
                on_success=self.moderation_publication_service.handle_edit_text,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="edit_text_menu",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_text_menu, ShowMode.EDIT),
            ),

            state=model.ModerationPublicationStates.edit_text,
            getter=self.moderation_publication_getter.get_edit_text_data,
            parse_mode="HTML",
        )

    def get_edit_image_menu_window(self) -> Window:
        return Window(
            Case(
                {
                    False: Multi(
                        Const("üé® <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n"),
                        Case(
                            {
                                True: Multi(
                                    Const(
                                        "‚úèÔ∏è <i>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. –Ø –≤–Ω–µ—Å—É –≤–∞—à–∏ –ø—Ä–∞–≤–∫–∏ –≤ —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.</i>\n\n")
                                ),
                                False: Const("üñºÔ∏è <i>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É —Å–æ–∑–¥–∞—Ç—å.</i>\n\n"),
                            },
                            selector="has_image"
                        ),
                        Const("üìã <b>–ß—Ç–æ —É–∫–∞–∑–∞—Ç—å –≤ –æ–ø–∏—Å–∞–Ω–∏–∏:</b>\n"),
                        Const("‚Ä¢ üë• <b>–û–±—ä–µ–∫—Ç—ã –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏</b> ‚Äî –∫—Ç–æ –∏–ª–∏ —á—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ\n"),
                        Const("‚Ä¢ üé≠ <b>–°—Ç–∏–ª—å –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</b> ‚Äî —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ, –º—É–ª—å—Ç—è—à–Ω–æ, –º–∏–Ω–∏–º–∞–ª–∏–∑–º, —Ü–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞\n"),
                        Const("‚Ä¢ üåç <b>–§–æ–Ω –∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ</b> ‚Äî —É–ª–∏—Ü–∞, –ø—Ä–∏—Ä–æ–¥–∞, –æ—Ñ–∏—Å –∏ —Ç.–¥.\n"),
                        Const("‚Ä¢ ‚ú® <b>–î–µ—Ç–∞–ª–∏</b> ‚Äî –æ—Å–≤–µ—â–µ–Ω–∏–µ, –ø–æ–∑–∞, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã"),
                    ),
                    True: Multi(
                        Const("ü™Ñ <b>–°–æ–∑–¥–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...</b>\n"),
                        Const("‚è≥ <i>–≠—Ç–æ –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ –º–∏–Ω—É—Ç—ã</i>"),
                    ),
                },
                selector="is_generating_image"
            ),
            Case(
                {
                    True: Const("\n‚ùå <b>–û—à–∏–±–∫–∞:</b> –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"),
                    False: Const(""),
                },
                selector="has_void_image_prompt"
            ),
            Case(
                {
                    True: Const("\nüìè <b>–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</b>\n<i>–ú–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                    False: Const(""),
                },
                selector="has_small_image_prompt"
            ),
            Case(
                {
                    True: Const("\nüìè <b>–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</b>\n<i>–ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                    False: Const(""),
                },
                selector="has_big_image_prompt"
            ),
            Column(
                Button(
                    Const("üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É"),
                    id="generate_image",
                    on_click=self.moderation_publication_service.handle_generate_new_image,
                ),
                Button(
                    Const("üì∑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—ë —Ñ–æ—Ç–æ"),
                    id="upload_image",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.upload_image, ShowMode.EDIT),
                ),
                Button(
                    Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="remove_image",
                    on_click=self.moderation_publication_service.handle_remove_image,
                    when="has_image",
                ),
                when=~F["is_generating_image"]
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            TextInput(
                id="image_prompt_input",
                on_success=self.moderation_publication_service.handle_generate_image_with_prompt,
            ),
            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="preview",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview, ShowMode.EDIT),
                when=~F["is_generating_image"]
            ),

            state=model.ModerationPublicationStates.edit_image_menu,
            getter=self.moderation_publication_getter.get_image_menu_data,
            parse_mode="HTML",
        )

    def get_upload_image_window(self) -> Window:
        return Window(
            Multi(
                Const("üì∑ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n"),
                Const("üì§ <i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—ë –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</i>"),
                # Add error messages
                Case(
                    {
                        True: Const(
                            "\n‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞</b>\n<i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–Ω–µ –¥—Ä—É–≥–æ–π —Ç–∏–ø —Ñ–∞–π–ª–∞)</i>"),
                        False: Const(""),
                    },
                    selector="has_invalid_image_type"
                ),
                Case(
                    {
                        True: Const("\nüìÅ <b>–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π</b>\n<i>–ú–∞–∫—Å–∏–º—É–º 10 –ú–ë</i>"),
                        False: Const(""),
                    },
                    selector="has_big_image_size"
                ),
                Case(
                    {
                        True: Const(
                            "\n‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏</b>\n<i>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ</i>"),
                        False: Const(""),
                    },
                    selector="has_image_processing_error"
                ),
                sep="",
            ),

            MessageInput(
                func=self.moderation_publication_service.handle_image_upload,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="image_menu",
                on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_image_menu, ShowMode.EDIT),
            ),

            state=model.ModerationPublicationStates.upload_image,
            getter=self.moderation_publication_getter.get_upload_image_data,
            parse_mode="HTML",
        )

    def get_social_network_select_window(self) -> Window:
        return Window(
            Multi(
                Const("üåê <b>–í—ã–±–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n"),
                Case(
                    {
                        True: Multi(
                            Const("‚ö†Ô∏è <b>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã</b>\n"),
                            Const(
                                "üîó <i>–î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</i>\n"),
                            Const("üí° <b>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π</b>"),
                        ),
                        False: Multi(
                            Const("üì± <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b>\n"),
                            Const("üí° <i>–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤</i>"),
                        ),
                    },
                    selector="no_connected_networks"
                ),
                sep="",
            ),

            # –ß–µ–∫–±–æ–∫—Å—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö)
            Column(
                Checkbox(
                    Const("‚úÖ üì± Telegram"),
                    Const("‚¨ú üì± Telegram"),
                    id="telegram_checkbox",
                    default=False,
                    on_state_changed=self.moderation_publication_service.handle_toggle_social_network,
                    when="telegram_connected",
                ),
                Checkbox(
                    Const("‚úÖ üîµ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"),
                    Const("‚¨ú üîµ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"),
                    id="vkontakte_checkbox",
                    default=False,
                    on_state_changed=self.moderation_publication_service.handle_toggle_social_network,
                    when="vkontakte_connected",
                ),
                when="has_available_networks",
            ),

            # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            Row(
                Button(
                    Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                    id="back_to_preview",
                    on_click=lambda c, b, d: d.switch_to(model.ModerationPublicationStates.edit_preview, ShowMode.EDIT),
                ),
            ),

            state=model.ModerationPublicationStates.social_network_select,
            getter=self.moderation_publication_getter.get_social_network_select_data,
            parse_mode="HTML",
        )
